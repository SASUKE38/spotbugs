spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:200:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:204:	UnusedFormalParameter:	Avoid unused method parameters such as 'evt'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:211:	UnusedFormalParameter:	Avoid unused method parameters such as 'evt'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:221:	SingularField:	Perhaps 'aboutEditorPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:223:	SingularField:	Perhaps 'aboutScrollPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:225:	SingularField:	Perhaps 'aboutTabPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:227:	SingularField:	Perhaps 'acknowldgementsEditorPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:229:	SingularField:	Perhaps 'acknowledgmentsScrollPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:231:	SingularField:	Perhaps 'jSeparator1' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:233:	SingularField:	Perhaps 'licenseEditorPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:235:	SingularField:	Perhaps 'licenseScrollPane' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AboutDialog.java:237:	SingularField:	Perhaps 'okButton' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AbstractSwingGuiCallback.java:102:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AbstractSwingGuiCallback.java:167:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AbstractSwingGuiCallback.java:207:	UnusedLocalVariable:	Avoid unused local variables such as 'defaultValue'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AbstractSwingGuiCallback.java:223:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalysisCallback.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'analysisInterrupted': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalysisCallback.java:31:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'analysisFinished': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:22:	UnnecessaryImport:	Unused import 'java.awt.event.WindowAdapter'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:23:	UnnecessaryImport:	Unused import 'java.awt.event.WindowEvent'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:29:	UnnecessaryImport:	Unused import 'javax.swing.BoxLayout'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:48:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:113:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:137:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'joinThread'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:171:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:172:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:242:	NonStaticInitializer:	Non-static initializers are confusing
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\AnalyzingDialog.java:269:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugAspects.java:53:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugAspects.java:122:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'sfm'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugAspects.java:150:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLeafNode.java:74:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLeafNode.java:77:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLoader.java:64:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLoader.java:175:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLoader.java:264:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLoader.java:328:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugLoader.java:336:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSaver.java:31:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.charsets.UTF8'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSaver.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:61:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:63:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:65:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:67:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:172:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:222:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:294:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:370:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:381:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:404:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugSet.java:406:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:93:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:97:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:101:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:250:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:270:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:280:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:284:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:396:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:399:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:437:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:437:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:586:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:590:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:594:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:598:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:613:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:625:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:633:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:637:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\BugTreeModel.java:673:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ClearGuiSaveState.java:28:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Debug.java:29:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Debug.java:48:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\DisplayNonmodelMessage.java:41:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\DisplayNonmodelMessage.java:59:	NonThreadSafeSingleton:	Singleton is not thread safe
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Driver.java:40:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Driver.java:116:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FBFileChooser.java:91:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchMethodException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FBFileChooser.java:93:	IdenticalCatchBranches:	'catch' branch identical to 'NoSuchMethodException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterActivity.java:33:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterActivity.java:35:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterActivity.java:46:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FilterActivity': 'listeners' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterActivity.java:47:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterFactory.java:42:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterFromBugPicker.java:48:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterFromBugPicker.java:94:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterListener.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'clearCache': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterMatcher.java:120:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterMatcher.java:122:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterMatcher.java:124:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterMatcher.java:126:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FilterMatcher.java:178:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:30:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createWindowMenu': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'initialize': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:34:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'makeSourceVisible': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'saveState': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setSourceTitle': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\FindBugsLayoutManager.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSourceViewComponent': the method is declared in an interface type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUI2CommandLine.java:94:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUI2CommandLine.java:100:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:60:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:114:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:122:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:140:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:166:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'STARTERDIRECTORY' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:169:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'PREVCOMMENTSSIZE' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:172:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'COMMENTKEYS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:176:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'NUMPROJECTS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:178:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'RECENTPROJECTKEYS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:181:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'SORTERTABLELENGTH' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:183:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:184:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'generateSorterKeys' is already in scope
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:202:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:261:	IdenticalCatchBranches:	'catch' branch identical to 'PluginException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:343:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:391:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:392:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'SORTERTABLELENGTH' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:394:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'generateSorterKeys' is already in scope
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:399:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'PREVCOMMENTSSIZE' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:403:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'COMMENTKEYS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:411:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'NUMPROJECTS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:414:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'RECENTPROJECTKEYS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:436:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:444:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GUISaveState.java:574:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GUISaveState': 'DEFAULT_COLUMN_HEADERS' is already in scope because it is declared in an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\GuiUtil.java:30:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:75:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:96:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:98:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:115:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:203:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:670:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:675:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:681:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:685:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrame.java:951:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:60:	UnusedPrivateField:	Avoid unused private fields such as 'sourceLink'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:62:	UnusedPrivateField:	Avoid unused private fields such as 'listenerAdded'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:112:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:314:	IdenticalCatchBranches:	'catch' branch identical to 'FileNotFoundException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:331:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameComponentFactory.java:353:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameHelper.java:13:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameLoadSaveHelper.java:459:	IdenticalCatchBranches:	'catch' branch identical to 'InterruptedException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameLoadSaveHelper.java:482:	IdenticalCatchBranches:	'catch' branch identical to 'InterruptedException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameMenu.java:3:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.gui2.MainFrameHelper.attachAcceleratorKey'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameMenu.java:4:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.gui2.MainFrameHelper.newJMenu'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameMenu.java:5:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.gui2.MainFrameHelper.newJMenuItem'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameMenu.java:271:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameMenu.java:412:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:94:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:114:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:133:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:220:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:221:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:239:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:383:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:552:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:573:	LogicInversion:	Use opposite operator instead of the logic complement operator.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:585:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:589:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:593:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:597:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:601:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\MainFrameTree.java:602:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:22:	UnnecessaryImport:	Unused import 'java.awt.BorderLayout'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:25:	UnnecessaryImport:	Unused import 'java.awt.Insets'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:28:	UnnecessaryImport:	Unused import 'java.awt.event.WindowAdapter'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:29:	UnnecessaryImport:	Unused import 'java.awt.event.WindowEvent'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:39:	UnnecessaryImport:	Unused import 'javax.swing.JScrollPane'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:51:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:58:	NonThreadSafeSingleton:	Singleton is not thread safe
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:66:	NonThreadSafeSingleton:	Singleton is not thread safe
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:92:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:109:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFrame.java:141:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFromBug.java:22:	UnnecessaryImport:	Unused import 'java.awt.BorderLayout'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFromBug.java:27:	UnnecessaryImport:	Unused import 'javax.swing.JLabel'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFromBug.java:69:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'closeDialog': private methods cannot be overridden
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewFilterFromBug.java:70:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewProjectWizard.java:25:	UnnecessaryImport:	Unused import 'java.awt.Dimension'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewProjectWizard.java:82:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\NewProjectWizard.java:468:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:80:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:102:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:113:	NonThreadSafeSingleton:	Singleton is not thread safe
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:186:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:265:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:272:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:278:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:292:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:293:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:341:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:400:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:403:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:406:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:410:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:413:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:416:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:456:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:585:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:693:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:712:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:744:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PreferencesFrame.java:749:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:41:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:67:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:130:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:135:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:136:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:137:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:147:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:154:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:158:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ProjectSettings.java:195:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:25:	UnnecessaryImport:	Unused import 'java.awt.event.WindowAdapter'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:26:	UnnecessaryImport:	Unused import 'java.awt.event.WindowEvent'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:34:	UnnecessaryImport:	Unused import 'javax.swing.WindowConstants'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:43:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:51:	NonThreadSafeSingleton:	Singleton is not thread safe
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\PropertiesDialog.java:87:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'PropertiesDialog': 'getInstance' is already in scope
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\RecentMenu.java:54:	LooseCoupling:	Avoid using implementation types like 'LimitedArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SaveType.java:87:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:141:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:207:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:334:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:375:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:375:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\Sortables.java:375:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:50:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:54:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:58:	SingletonClassReturningNewInstance:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:67:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:116:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterDialog.java:128:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:60:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:64:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:68:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:92:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:164:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:309:	FormalParameterNamingConventions:	The method parameter name 'XPosition' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SorterTableColumnModel.java:381:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceCodeDisplay.java:106:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceCodeDisplay.java:196:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceCodeDisplay.java:279:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:111:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'WindowConstants': 'DISPOSE_ON_CLOSE' is already in scope because it is inherited by an enclosing type
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:175:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:229:	UnusedFormalParameter:	Avoid unused method parameters such as 'evt'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:237:	UnusedFormalParameter:	Avoid unused method parameters such as 'evt'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:282:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:291:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:300:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:304:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:308:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:312:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:326:	IdenticalCatchBranches:	'catch' branch identical to 'CheckedAnalysisException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:329:	IdenticalCatchBranches:	'catch' branch identical to 'CheckedAnalysisException' branch
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:348:	UnusedFormalParameter:	Avoid unused method parameters such as 'evt'.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:380:	SingularField:	Perhaps 'jList2' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:385:	SingularField:	Perhaps 'browseButton' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:387:	SingularField:	Perhaps 'card1Explanation1Label' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:389:	SingularField:	Perhaps 'card1Explanation2Label' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:391:	SingularField:	Perhaps 'card1Explanation3Label' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:393:	SingularField:	Perhaps 'card1TitleLabel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:397:	SingularField:	Perhaps 'errorMessageLabel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:399:	SingularField:	Perhaps 'finshButton' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:401:	SingularField:	Perhaps 'firstPanel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:403:	SingularField:	Perhaps 'jLabel1' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:405:	SingularField:	Perhaps 'jLabel2' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:407:	SingularField:	Perhaps 'jLabel3' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:411:	SingularField:	Perhaps 'jScrollPane1' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:413:	SingularField:	Perhaps 'jScrollPane2' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:419:	SingularField:	Perhaps 'secondPanel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:423:	SingularField:	Perhaps 'sourceRootLabel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SourceDirectoryWizard.java:425:	SingularField:	Perhaps 'srcFileIconLabel' could be replaced by a local variable.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplashFrame.java:83:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplashFrame.java:135:	AssignmentToNonFinalStatic:	Possible unsafe assignment to non-final static field 'animator' in a constructor.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplashFrame.java:156:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplashFrame.java:165:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplitLayout.java:136:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SplitLayout.java:150:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SpringUtilities.java:17:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:74:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:84:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:85:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:86:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:95:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:105:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:108:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:112:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:134:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\StackedFilterMatcher.java:194:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SuppressionMatcher.java:38:	UselessParentheses:	Useless parentheses.
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\SuppressionMatcher.java:43:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ViewFilter.java:48:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'PriorityFilter(int, String)': enum constructors are implicitly private
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\ViewFilter.java:71:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'RankFilter(int, String)': enum constructors are implicitly private
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\WideComboBox.java:11:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui2\WideComboBox.java:18:	LooseCoupling:	Avoid using implementation types like 'Vector'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\gui\AnnotatedString.java:172:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\gui\main\edu\umd\cs\findbugs\launchGUI\LaunchGUI.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\launchGUI\LaunchGUI.java:33:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\DocumentCharacterIterator.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\DocumentCharacterIterator.java:57:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\HighlightInformation.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\JavaScanner.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\JavaScanner.java:41:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\JavaScanner.java:61:	AvoidStringBufferField:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\JavaSourceDocument.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NavigableTextPane.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NavigableTextPane.java:43:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NavigableTextPane.java:130:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NavigableTextPane.java:148:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NavigableTextPane.java:150:	LooseCoupling:	Avoid using implementation types like 'PriorityQueue'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NoWrapBoxView.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NumberedEditorKit.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NumberedParagraphView.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NumberedParagraphView.java:89:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NumberedParagraphView.java:98:	LooseCoupling:	Avoid using implementation types like 'WeakHashMap'; use the interface instead
spotbugs\src\gui\main\edu\umd\cs\findbugs\sourceViewer\NumberedViewFactory.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\gui\main\edu\umd\cs\findbugs\workflow\MergeSummarizeAndView.java:274:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\AWTEventQueueExecutor.java:47:	IdenticalCatchBranches:	'catch' branch identical to 'InterruptedException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\AbstractBugReporter.java:121:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\AbstractBugReporter.java:258:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\AbstractBugReporter.java:274:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\AnalysisCacheToRepositoryAdapter.java:43:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\AnalysisCacheToRepositoryAdapter.java:43:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\AnalysisError.java:90:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\AnalysisError.java:94:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'tmp'
spotbugs\src\main\java\edu\umd\cs\findbugs\Analyze.java:20:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\AppVersion.java:79:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAccumulator.java:52:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAccumulator.java:68:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAccumulator.java:188:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:40:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MESSAGE_TAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:42:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:42:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'clone': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:49:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'accept': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'format': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:66:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getDescription': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:72:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setDescription': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:80:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isSignificant': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotation.java:82:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'toString': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:23:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitClassAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:25:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitFieldAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:27:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitMethodAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitIntAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:31:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitStringAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitLocalVariableAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitTypeAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationVisitor.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitSourceLineAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationWithSourceLines.java:34:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationWithSourceLines.java:39:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugAnnotationWithSourceLines.java:39:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:38:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ROOT_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:40:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'SRCMAP_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'PROJECT_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ERRORS_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:46:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ANALYSIS_ERROR_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:50:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ERROR_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:52:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ERROR_MESSAGE_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:56:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ERROR_EXCEPTION_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:59:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'ERROR_STACK_TRACE_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:63:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'MISSING_CLASS_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:65:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'SUMMARY_HTML_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:67:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'APP_CLASS_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:69:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'CLASS_HASHES_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:72:	UnnecessaryModifier:	Unnecessary modifiers 'static final' on field 'HISTORY_ELEMENT_NAME': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:74:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProject': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:82:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setReleaseName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:89:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getReleaseName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:94:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProjectStats': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:102:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:107:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:115:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setAnalysisTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:123:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setAnalysisVersion': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:128:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnalysisTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:134:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAppVersionFromSequenceNumber': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:143:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setSequenceNumber': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:153:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSequenceNumber': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:155:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isMultiversion': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:157:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'hasDeadBugs': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:165:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'clearAppVersions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:173:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addAppVersion': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:178:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCurrentAppVersion': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:183:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'appVersionIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:194:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'add': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:207:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'add': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:220:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'lookupFromUniqueId': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:228:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addError': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:236:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addError': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:244:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addMissingClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:246:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setClassFeatureSet': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:248:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writePrologue': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:250:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeEpilogue': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:252:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'clearClassFeatures': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:254:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'clearMissingClasses': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:263:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'readXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:273:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'readXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:283:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'readXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:291:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:300:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:310:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:325:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:331:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'iterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:336:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCollection': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:343:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'toDocument': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:350:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createEmptyCollectionWithMetadata': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:355:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setWithMessages': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:360:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setMinimalXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:365:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getWithMessages': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:367:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'findBug': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:369:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isApplySuppressions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:371:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setApplySuppressions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollection.java:373:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'bugsPopulated': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugCollectionBugReporter.java:61:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:114:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:217:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:528:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:531:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:534:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:630:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:1867:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2076:	UnusedPrivateMethod:	Avoid unused private methods such as 'ageInDays(BugCollection, long)'.
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2081:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'ageInDays'
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2123:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2201:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2252:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2262:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2272:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2514:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2516:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugInstance.java:2529:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\BugProperty.java:73:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugProperty.java:73:	CloneMethodMustBePublic:	clone() method must be public if the class implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRankCategory.java:46:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'BugRankCategory(int)': enum constructors are implicitly private
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRankCategory.java:55:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:99:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:101:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:262:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:262:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:287:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\BugRanker.java:326:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'BugRanker': 'findRank' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:41:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SILENT': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:46:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NORMAL': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:54:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setErrorVerbosity': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:63:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setPriorityThreshold': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:72:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportBug': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finish': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:83:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportQueuedErrors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:91:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addObserver': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:97:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProjectStats': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporter.java:102:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBugCollection': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\BugReporterObserver.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportBug': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ByteCodePatternDetector.java:69:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ByteCodePatternDetector.java:104:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ByteCodePatternDetector.java:125:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\BytecodeScanningDetector.java:62:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\CallGraph.java:29:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\CheckBcel.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:64:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:66:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:189:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:192:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:207:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ClassScreener.java:210:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:43:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:43:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:68:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ioe' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:148:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:150:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\CommandLineUiCallback.java:155:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\DeepSubtypeAnalysis.java:21:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\Detector.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitClassContext': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Detector.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'report': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Detector2.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Detector2.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishPass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Detector2.java:52:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getDetectorClassName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactory.java:65:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactory.java:442:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactoryChooser.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactoryChooser.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'enable': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactoryCollection.java:278:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactoryCollection.java:331:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\DetectorFactoryCollection.java:543:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:64:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startRecursiveDirectorySearch': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:66:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'doneRecursiveDirectorySearch': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:68:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startScanningArchives': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:70:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'doneScanningArchives': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:72:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startScanningClasses': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:74:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:76:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'doneScanningClasses': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:79:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:82:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:86:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:90:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:94:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:98:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:102:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:104:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:108:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:112:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:116:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:120:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:124:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:128:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:132:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:136:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:145:	UnusedPrivateField:	Avoid unused private fields such as 'scanForNestedArchives'.
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:312:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'fullyQualifiedSourceFile'
spotbugs\src\main\java\edu\umd\cs\findbugs\DiscoverSourceDirectories.java:337:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\EmacsBugReporter.java:43:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\EmacsBugReporter.java:45:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\EmacsBugReporter.java:53:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ErrorCountingBugReporter.java:33:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ExitCodes.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ERROR_FLAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ExitCodes.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MISSING_CLASS_FLAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ExitCodes.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'BUGS_FOUND_FLAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ExitCodes.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'from': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs.java:347:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs.java:377:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FindBugs': 'showCommandLineOptions' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs.java:516:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FindBugs': 'validTimestamp' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:297:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:670:	IdenticalCatchBranches:	'catch' branch identical to 'InstantiationException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:693:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:745:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:751:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:835:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:934:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:1005:	IdenticalCatchBranches:	'catch' branch identical to 'CheckedAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:1031:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:1105:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugs2.java:1198:	UnusedPrivateMethod:	Avoid unused private methods such as 'logRecoverableException(ClassDescriptor, Detector2, Throwable)'.
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsCommandLine.java:77:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'modernGui'.
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsDisplayFeatures.java:25:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsMessageFormat.java:107:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportNumberOfArchives': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startArchive': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:53:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishArchive': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'predictPassCount': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:69:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:74:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FindBugsProgress.java:80:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishPerClassAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\FuzzyBugComparator.java:105:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\FuzzyBugComparator.java:152:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\FuzzyBugComparator.java:208:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\FuzzyBugComparator.java:274:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'cmp'
spotbugs\src\main\java\edu\umd\cs\findbugs\FuzzyBugComparator.java:315:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\HTMLBugReporter.java:64:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\I18N.java:170:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\IClassScreener.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'vacuous': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IClassScreener.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'matches': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBugReporter': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:54:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setBugReporter': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setProject': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:69:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProject': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setProgressCallback': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:89:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addFilter': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:98:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'excludeBaselineBugs': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:108:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setUserPreferences': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:116:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addClassObserver': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:125:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setClassScreener': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:133:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setRelaxedReportingMode': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:141:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'enableTrainingOutput': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:150:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'enableTrainingInput': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:158:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setAnalysisFeatureSettings': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:163:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getReleaseName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:169:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setReleaseName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:174:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProjectName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:180:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setProjectName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:189:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setSourceInfoFile': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:200:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'execute': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:207:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCurrentClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:212:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBugCount': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:217:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getErrorCount': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:222:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getMissingClassCount': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:229:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getUserPreferences': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:237:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'emitTrainingOutput': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:244:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getTrainingOutputDir': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:251:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'useTrainingInput': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:258:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getTrainingInputDir': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:266:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setScanNestedArchives': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:275:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setNoClassOk': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:284:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setDetectorFactoryCollection': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:289:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setAbridgedMessages': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:291:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setMergeSimilarWarnings': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:293:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setApplySuppression': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IFindBugsEngine.java:295:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishSettings': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'YES_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:41:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NO_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:43:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CANCEL_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:45:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'YES_NO_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'YES_NO_CANCEL_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:49:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'OK_CANCEL_OPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:75:	UnnecessaryModifier:	Unnecessary modifier 'public' on class 'FormItem': the class is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IGuiCallback.java:149:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScanner.java:34:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'traverseEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScanner.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'scanInstruction': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScanner.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isDone': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScannerDriver.java:38:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScannerGenerator.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'start': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\InstructionScannerGenerator.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createScanner': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\IntAnnotation.java:76:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\IntAnnotation.java:76:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\IntAnnotation.java:157:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\L10N.java:40:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\L10N.java:63:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:94:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:182:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LocalVariableAnnotation': 'PARAMETER_NAMED_ROLE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:184:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LocalVariableAnnotation': 'PARAMETER_ROLE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:190:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:190:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:245:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:357:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LocalVariableAnnotation': 'getLocalVariableAnnotation' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:377:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\LocalVariableAnnotation.java:397:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'LocalVariableAnnotation': 'getLocalVariableAnnotation' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\Lookup.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\NoOpFindBugsProgress.java:8:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\NoOpFindBugsProgress.java:12:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\NoOpFindBugsProgress.java:16:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\NoOpFindBugsProgress.java:20:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\NoOpFindBugsProgress.java:24:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\Obfuscate.java:33:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\Obfuscate.java:125:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:173:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:954:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'SERVLET_REQUEST_TAINTED' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:958:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'SERVLET_REQUEST_TAINTED' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:962:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'SERVLET_OUTPUT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:967:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'SERVLET_OUTPUT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:983:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:983:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'SIGNED_BYTE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:984:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:984:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT_REMAINDER' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:985:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT_REMAINDER' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:985:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_RANDOM' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:986:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_HASHCODE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:992:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:993:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_HASHCODE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:994:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:995:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_RANDOM' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:997:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1003:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1004:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT_REMAINDER' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1005:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1006:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT_REMAINDER' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1008:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'NOT_SPECIAL' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1014:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'RANDOM_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1014:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'HASHCODE_INT' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1020:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_RANDOM' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1020:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Item': 'MATH_ABS_OF_HASHCODE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1098:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1105:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1309:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:1759:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:2374:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:2866:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:2987:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3067:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3099:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3220:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3289:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3391:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3437:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3550:	EmptyControlStatement:	Empty else statement
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3567:	EmptyControlStatement:	Empty else statement
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3670:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\OpcodeStack.java:3740:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\PackageStats.java:124:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\PackageStats.java:234:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:76:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:79:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:81:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:83:	LooseCoupling:	Avoid using implementation types like 'LinkedHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:85:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:92:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:94:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:106:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'EnabledState': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:429:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:510:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:511:	CloseResource:	Ensure that resources like this Plugin object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:527:	CloseResource:	Ensure that resources like this Plugin object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:627:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Plugin': 'getByPluginId' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:690:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Plugin': 'allPlugins' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:692:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\Plugin.java:693:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Plugin': 'allPlugins' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:115:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:150:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:152:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:214:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:240:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:244:	CloseResource:	Ensure that resources like this PluginLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:252:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'PluginLoader': 'createClassloaderUrls' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:273:	CloseResource:	Ensure that resources like this PluginLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:320:	CloseResource:	Ensure that resources like this URLClassLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:349:	CloseResource:	Ensure that resources like this JarInputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:364:	CloseResource:	Ensure that resources like this FileInputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:387:	LooseCoupling:	Avoid using implementation types like 'Attributes'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:440:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:452:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'fake'.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:463:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:493:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:593:	CloseResource:	Ensure that resources like this URLClassLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:595:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:651:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:743:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:939:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:954:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:967:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:969:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1081:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1103:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1156:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1166:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1186:	LocalVariableNamingConventions:	The local variable name 'findbugsXML_URL' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1231:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1271:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1319:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1435:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1477:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1490:	CloseResource:	Ensure that resources like this PluginLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1511:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1624:	IdenticalCatchBranches:	'catch' branch identical to 'DocumentException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\PluginLoader.java:1633:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'd'
spotbugs\src\main\java\edu\umd\cs\findbugs\PrintingBugReporter.java:43:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:32:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'IGNORE_PRIORITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:32:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:37:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'EXP_PRIORITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:37:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'LOW_PRIORITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NORMAL_PRIORITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:52:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'HIGH_PRIORITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\Priorities.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:28:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.xml.XMLOutputUtil.writeElementList'
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:29:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.xml.XMLOutputUtil.writeFileList'
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:209:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:465:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:467:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:505:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:543:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:553:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:591:	LooseCoupling:	Avoid using implementation types like 'Attributes'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:605:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:715:	CloseResource:	Ensure that resources like this FileOutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:739:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Project': 'readXML' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:884:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:885:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:992:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\Project.java:1099:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectPackagePrefixes.java:102:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectPackagePrefixes.java:105:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectPackagePrefixes.java:114:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectPackagePrefixes.java:115:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectPackagePrefixes.java:163:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectStats.java:170:	FormalParameterNamingConventions:	The method parameter name 'vm_version' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectStats.java:474:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectStats.java:507:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectStats.java:517:	CloseResource:	Ensure that resources like this Reader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ProjectStats.java:522:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:53:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:62:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:108:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:141:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:142:	IdenticalCatchBranches:	'catch' branch identical to 'IllegalArgumentException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:142:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:148:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\PropertyBundle.java:234:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\RecursiveFileSearch.java:44:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\RecursiveFileSearch.java:46:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\RecursiveFileSearch.java:50:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ResourceCollection.java:44:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ResourceTrackingDetector.java:52:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ResourceTrackingDetector.java:52:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ResourceTrackingDetector.java:117:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ResourceTrackingDetector.java:200:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:88:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:94:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:96:	AvoidStringBufferField:	StringBuffers can grow quite a lot, and so may become a source of memory leak (if the owning class has a long life time).
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:107:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:180:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:526:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Arrays': 'asList' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:559:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Arrays': 'asList' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:571:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:583:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:590:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:603:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:620:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:712:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\SAXBugCollectionHandler.java:749:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\SelfCalls.java:53:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SelfCalls.java:77:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\SelfCalls.java:83:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\SelfCalls.java:95:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\SelfCalls.java:215:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ShowHelp.java:28:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ShowHelp.java:36:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SloppyBugComparator.java:38:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\SloppyBugComparator.java:38:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\SloppyBugComparator.java:119:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:109:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:115:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:117:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:119:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:273:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:290:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:339:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:407:	CloseResource:	Ensure that resources like this FileOutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:421:	CloseResource:	Ensure that resources like this FileOutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:444:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:488:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:826:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:855:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\SortedBugCollection.java:1114:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'SortedBugCollection': 'cloneAll' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:157:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:157:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:200:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'SourceLineAnnotation': 'UNKNOWN_SOURCE_FILE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:215:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:230:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'sourceLines'
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:353:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:950:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'sourcePath'
spotbugs\src\main\java\edu\umd\cs\findbugs\SourceLineAnnotation.java:1070:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'SourceLineAnnotation': 'createUnknown' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\StackMapAnalyzer.java:50:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\StackMapAnalyzer.java:82:	FormalParameterNamingConventions:	The method parameter name 'frame_type' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\StackMapAnalyzer.java:117:	UnusedLocalVariable:	Avoid unused local variables such as 'reg'.
spotbugs\src\main\java\edu\umd\cs\findbugs\StartTime.java:40:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\StatelessDetector.java:37:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\StatelessDetector.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'clone': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\StringAnnotation.java:86:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\StringAnnotation.java:86:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\StringAnnotation.java:110:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'txt'
spotbugs\src\main\java\edu\umd\cs\findbugs\StringAnnotation.java:131:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\SwitchHandler.java:99:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\SwitchHandler.java:103:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:63:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:119:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:155:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:156:	IdenticalCatchBranches:	'catch' branch identical to 'IllegalArgumentException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:156:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:162:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:265:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:268:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\SystemProperties.java:287:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\TextUICommandLine.java:81:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\TextUICommandLine.java:281:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\TextUICommandLine.java:409:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\TextUICommandLine.java:463:	CloseResource:	Ensure that resources like this BufferedOutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\TextUIProgressCallback.java:95:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:122:	LocalVariableNamingConventions:	The final local variable name 'SCAN' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:123:	LocalVariableNamingConventions:	The final local variable name 'ESCAPE' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:124:	LocalVariableNamingConventions:	The final local variable name 'DONE' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:175:	LocalVariableNamingConventions:	The final local variable name 'SCAN' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:176:	LocalVariableNamingConventions:	The final local variable name 'STAR' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:177:	LocalVariableNamingConventions:	The final local variable name 'DONE' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\Tokenizer.java:186:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\TypeAnnotation.java:158:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:36:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:66:	UnnecessaryModifier:	Unnecessary modifier 'final' on resource specification 'is': resource specifications are implicitly final
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:77:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:113:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:114:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:115:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:135:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:142:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:142:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Version': 'VERSION_STRING' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:147:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:163:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\Version.java:167:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\VersionInsensitiveBugComparator.java:41:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\VersionInsensitiveBugComparator.java:41:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\VersionInsensitiveBugComparator.java:156:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\VersionInsensitiveBugComparator.java:159:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\WarningComparator.java:32:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'setClassNameRewriter': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\WarningComparator.java:35:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'compare': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\XDocsBugReporter.java:52:	UnusedPrivateField:	Avoid unused private fields such as 'PROJECT_ELEMENT_NAME'.
spotbugs\src\main\java\edu\umd\cs\findbugs\XDocsBugReporter.java:60:	UnusedPrivateField:	Avoid unused private fields such as 'SUMMARY_HTML_ELEMENT_NAME'.
spotbugs\src\main\java\edu\umd\cs\findbugs\XDocsBugReporter.java:76:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\XDocsBugReporter.java:140:	UnusedFormalParameter:	Avoid unused method parameters such as 'project'.
spotbugs\src\main\java\edu\umd\cs\findbugs\XMLWriteableWithMessages.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\asm\AbstractFBMethodVisitor.java:28:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractBlockOrder.java:35:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractClassMember.java:47:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractDataflow.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractDataflow.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractDataflowAnalysis.java:40:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractDominatorsAnalysis.java:134:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:23:	UnnecessaryImport:	Unused import 'org.apache.bcel.generic.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:53:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:53:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:176:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:180:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:184:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:188:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:192:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:196:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:212:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:217:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:221:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:225:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:229:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:233:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:237:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:241:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:245:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:249:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:253:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:257:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:261:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:265:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:269:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:273:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:277:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:281:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:285:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:289:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:293:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:297:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:327:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:396:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:498:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:511:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:526:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:540:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:556:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:574:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AbstractFrameModelingVisitor.java:586:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAccessFlags': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isStatic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isFinal': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:50:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isPublic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:55:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isProtected': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isPrivate': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:65:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isSynthetic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:70:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isDeprecated': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AccessibleEntity.java:76:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:160:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:243:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:251:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:283:	CloseResource:	Ensure that resources like this AnalysisContext object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:320:	CloseResource:	Ensure that resources like this AnalysisContext object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:320:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'currentAnalysisContext' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:325:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:358:	CloseResource:	Ensure that resources like this AnalysisContext object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:392:	CloseResource:	Ensure that resources like this AnalysisContext object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:475:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:478:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:498:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:504:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:507:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:554:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'currentAnalysisContext' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:691:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:691:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:691:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:726:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:726:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:726:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:735:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:765:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:765:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:765:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:793:	CloseResource:	Ensure that resources like this AnalysisContext object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:969:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisContext.java:989:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'AnalysisContext': 'logError' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on annotation 'AnalysisFeature': the annotation is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:44:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'public static' on class 'Builder': the class is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:63:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACCURATE_EXCEPTIONS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:63:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:69:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSERVE_SPACE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:69:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:74:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MODEL_INSTANCEOF': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:74:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:79:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SKIP_HUGE_METHODS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:79:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:84:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'INTERATIVE_OPCODE_STACK_ANALYSIS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:84:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:90:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:90:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:99:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:99:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:107:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MERGE_SIMILAR_WARNINGS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:107:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:116:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NUM_BOOLEAN_ANALYSIS_PROPERTIES': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnalysisFeatures.java:116:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationDatabase.java:49:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationDatabase.java:54:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'Target': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationDatabase.java:77:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationDatabase.java:189:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationDatabase.java:414:	UnusedFormalParameter:	Avoid unused method parameters such as 'annotation'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationEnumeration.java:37:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationRetentionDatabase.java:25:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationRetentionDatabase.java:29:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AnnotationRetentionDatabase.java:38:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AssertionMethods.java:126:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AssertionMethods.java:127:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AssertionMethods.java:162:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AssertionMethods.java:221:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\AssertionMethods.java:232:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'isAssertionMethod'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BackwardDataflowAnalysis.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BasicAbstractDataflowAnalysis.java:40:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BasicAbstractDataflowAnalysis.java:41:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BasicAbstractDataflowAnalysis.java:43:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BasicAbstractDataflowAnalysis.java:197:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:38:	UnnecessaryImport:	Unused import 'org.apache.bcel.generic.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:158:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:160:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:168:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:428:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:430:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:530:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:552:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:554:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BetterCFGBuilder2.java:1036:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BlockOrder.java:31:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'blockIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BlockOrder.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'compare': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BlockType.java:73:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BytecodeScanner.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'handleInstruction': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\BytecodeScanner.java:359:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:89:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:151:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:171:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:171:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:335:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:351:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:371:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFG.java:390:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFGBuilder.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'build': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFGBuilder.java:41:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCFG': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CFGBuilderFactory.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnAnnotationDatabase.java:67:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnAnnotationDatabase.java:365:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnAnnotationDatabase.java:375:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnValueAnnotation.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnValueAnnotation.java:115:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CheckReturnValueAnnotation': 'CHECK_RETURN_VALUE_IGNORE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnValueAnnotation.java:117:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CheckReturnValueAnnotation': 'CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CheckReturnValueAnnotation.java:119:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CheckReturnValueAnnotation': 'CHECK_RETURN_VALUE_HIGH' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:69:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.classfile.engine.bcel.NonExceptionDominatorsAnalysis'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:70:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.classfile.engine.bcel.NonImplicitExceptionDominatorsAnalysis'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:71:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.classfile.engine.bcel.NonExceptionPostDominatorsAnalysis'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:72:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.classfile.engine.bcel.NonImplicitExceptionPostDominatorsAnalysis'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:124:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:487:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:531:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:888:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:902:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:913:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:945:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:962:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:982:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:992:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1006:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1006:	UnusedPrivateMethod:	Avoid unused private methods such as 'getMethodAnalysis(Class<Analysis>, Method)'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1013:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1018:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1027:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassContext.java:1032:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassHash.java:209:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassHash.java:255:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassHash.java:257:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassHash.java:311:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassHash.java:324:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'cmp'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:41:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getPackageName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:52:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:58:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSignature': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:64:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSourceSignature': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassMember.java:69:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isResolved': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassNotFoundExceptionParser.java:40:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassNotFoundExceptionParser.java:51:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ClassSummary.java:41:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CompactLocationNumbering.java:32:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\CompactLocationNumbering.java:34:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:55:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:55:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:204:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:212:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:254:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:268:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:280:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:295:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:325:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:334:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:337:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:363:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:396:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:407:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Dataflow.java:419:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:40:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createFact': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:53:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getStartFact': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:61:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getResultFact': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:73:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFactAtLocation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:85:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFactAfterLocation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:95:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFactOnEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:100:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'copy': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:105:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'initEntryFact': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:110:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'makeFactTop': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:115:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isTop': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:120:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isForwards': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:129:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getBlockOrder': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:134:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'same': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:153:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'transfer': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:172:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'edgeTransfer': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:185:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'meetInto': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:191:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startIteration': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:196:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishIteration': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:198:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLastUpdateTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:200:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLastUpdateTimestamp': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysis.java:209:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'factToString': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowAnalysisException.java:39:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:59:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:59:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:91:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:107:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowCFGPrinter.java:107:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowValueChooser.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DataflowValueChooser.java:28:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Debug.java:30:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'VERIFY_INTEGRITY': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Debug.java:30:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\DefaultNullnessAnnotations.java:28:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Edge.java:184:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Edge.java:240:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeChooser.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'UNKNOWN_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:39:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:45:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'FALL_THROUGH_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:45:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:51:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'IFCMP_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:51:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:57:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SWITCH_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:57:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:63:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'SWITCH_DEFAULT_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:63:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:69:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'JSR_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:69:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:75:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'RET_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:75:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:81:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'GOTO_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:81:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:88:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'RETURN_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:88:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:95:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'UNHANDLED_EXCEPTION_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:95:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:102:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'HANDLED_EXCEPTION_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:102:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:108:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'START_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:108:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:115:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'BACKEDGE_TARGET_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:115:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:121:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'BACKEDGE_SOURCE_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:121:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:127:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'EXIT_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:127:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:138:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CHECKED_EXCEPTIONS_FLAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:138:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:143:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'EXPLICIT_EXCEPTIONS_FLAG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EdgeTypes.java:143:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\EqualsKindSummary.java:34:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'KindOfEquals': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ExceptionHandlerMap.java:46:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ExceptionHandlerMap.java:48:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\FieldSummary.java:201:	UnusedLocalVariable:	Avoid unused local variables such as 'fields'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\FieldSummary.java:202:	UnusedLocalVariable:	Avoid unused local variables such as 'removed'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\FieldSummary.java:203:	UnusedLocalVariable:	Avoid unused local variables such as 'retained'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ForwardDataflowAnalysis.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Frame.java:22:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.Debug.VERIFY_INTEGRITY'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Frame.java:64:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Frame.java:80:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Frame.java:430:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Frame.java:450:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\FrameDataflowAnalysis.java:34:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\FrameDataflowAnalysis.java:34:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:63:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:505:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'm'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:643:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:688:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:715:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:792:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy.java:942:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:22:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.Hierarchy.DEBUG_METHOD_LOOKUP'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:23:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.Hierarchy.INSTANCE_METHOD'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:24:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.Hierarchy.STATIC_METHOD'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:65:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:67:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.lang': 'Object' is already in scope because it is declared in java.lang
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:257:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:437:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Hierarchy2.java:493:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:43:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'parameterMustBeNonNull': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:56:	FinalParameterInAbstractMethod:	Final parameter in abstract method
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:56:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'getResolvedAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'loadAuxiliaryAnnotations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:87:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addFieldAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:104:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addMethodAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:123:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addMethodParameterAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\INullnessAnnotationDatabase.java:137:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addDefaultAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\IncompatibleTypes.java:44:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\IncompatibleTypes.java:214:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'IncompatibleTypes': 'UNCHECKED' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\IncompatibleTypes.java:218:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'IncompatibleTypes': 'SEEMS_OK' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\IncompatibleTypes.java:288:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\InnerClassAccessMap.java:54:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\InnerClassAccessMap.java:386:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\InstructionHandleMap.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\JavaClassAndMethodChooser.java:27:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\JavaClassAndMethodChooser.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LineNumberMap.java:48:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LineNumberMap.java:69:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LiveLocalStoreAnalysis.java:88:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\Location.java:121:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'pos'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LockAnalysis.java:133:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LockChecker.java:59:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LockChecker.java:113:	EmptyControlStatement:	Empty else statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\LockSet.java:387:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\MethodChooser.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'choose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\MethodHash.java:49:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\MethodHash.java:148:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'MethodHash': 'compareHashes' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\MethodHash.java:153:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} && {thenBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\NullnessAnnotation.java:68:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\NullnessAnnotationDatabase.java:115:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ObjectTypeFactory.java:34:	SingleMethodSingleton:	Class contains multiple getInstance methods. Please review.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ObjectTypeFactory.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ObjectTypeFactory.java:54:	SingletonClassReturningNewInstance:	getInstance method always creates a new object and hence does not comply to Singleton Design Pattern behaviour. Please review
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\OpcodeStackScanner.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\OpcodeStackScanner.java:92:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PathVisitor.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitBasicBlock': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PathVisitor.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitInstructionHandle': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PathVisitor.java:52:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PruneInfeasibleExceptionEdges.java:46:	UnusedPrivateField:	Avoid unused private fields such as 'DEBUG'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PruneInfeasibleExceptionEdges.java:105:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'methodGen'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PruneUnconditionalExceptionThrowerEdges.java:49:	UnusedPrivateField:	Avoid unused private fields such as 'DEBUG_DIFFERENCES'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PruneUnconditionalExceptionThrowerEdges.java:90:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'javaClass'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PruneUnconditionalExceptionThrowerEdges.java:90:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'method'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\PutfieldScanner.java:35:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isResourceCreation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:67:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isResourceClose': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:82:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'mightCloseResource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:95:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createVisitor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:109:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'ignoreImplicitExceptions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:125:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'ignoreExceptionEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceTracker.java:137:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isParamInstance': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValue.java:22:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValue.java:39:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValue.java:39:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValue.java:47:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValue.java:52:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValueAnalysis.java:34:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValueFrame.java:71:	FormalParameterNamingConventions:	The method parameter name 'other_' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ResourceValueFrame.java:81:	FormalParameterNamingConventions:	The method parameter name 'other_' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ReverseDFSOrder.java:39:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'rdfs'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SignatureParser.java:54:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SignatureParser.java:80:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SignatureParser.java:84:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SignatureParser.java:168:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SimplePathEnumerator.java:104:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SimplePathEnumerator.java:122:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFileDataSource.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'open': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFileDataSource.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFullFileName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFileDataSource.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFullURI': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFileDataSource.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLastModified': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:81:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:97:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'contains': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:99:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isPlatformDependent': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:101:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getDataSource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:400:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:486:	LooseCoupling:	Avoid using implementation types like 'Cache'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:605:	CloseResource:	Ensure that resources like this SourceRepository object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:630:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'platformName'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:644:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'canonicalName'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:698:	CloseResource:	Ensure that resources like this SourceRepository object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceFinder.java:723:	CloseResource:	Ensure that resources like this SourceRepository object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceInfoMap.java:128:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceInfoMap.java:131:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceInfoMap.java:167:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\SourceInfoMap.java:376:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\TargetEnumeratingVisitor.java:47:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\TargetEnumeratingVisitor.java:49:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\TestCaseDetector.java:29:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:66:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openStream': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:71:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getURL': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:77:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'close': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:126:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:149:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:305:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'URLClassPath': 'getURLProtocol' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:311:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'URLClassPath': 'getFileExtension' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:312:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'URLClassPath': 'isArchiveExtension' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:314:	CloseResource:	Ensure that resources like this Entry object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:345:	CloseResource:	Ensure that resources like this Entry object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:382:	CloseResource:	Ensure that resources like this Entry object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:392:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:418:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:441:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\URLClassPath.java:453:	CloseResource:	Ensure that resources like this Entry object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\UnresolvedXMethod.java:185:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\UnresolvedXMethod.java:238:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSuperclassDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:53:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getInterfaceDescriptorList': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getImmediateEnclosingClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:67:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isInterface': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:72:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isAbstract': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:81:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotationDescriptors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:84:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:97:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'findMethod': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:106:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'findMethod': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:116:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'findMatchingMethod': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:129:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'findField': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:131:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getXFields': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:133:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getXMethods': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:135:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSourceSignature': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:137:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'usesConcurrency': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:139:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'hasStubs': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XClass.java:144:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCalledClassDescriptors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:112:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:112:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:144:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:388:	IdenticalCatchBranches:	'catch' branch identical to 'CheckedAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:412:	UnusedLocalVariable:	Avoid unused local variables such as 'entry'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:426:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:428:	UnusedLocalVariable:	Avoid unused local variables such as 'entry'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:579:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:650:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'm'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XFactory.java:665:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'f'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XField.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isReferenceType': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XField.java:52:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isVolatile': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XField.java:57:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isEnum': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XField.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getFieldDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isNative': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isAbstract': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:49:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isSynchronized': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:51:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumParams': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:56:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getMethodDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:62:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getThrownExceptions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:67:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isUnconditionalThrower': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:73:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'usesConcurrency': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isStub': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:81:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isIdentity': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:90:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'bridgeTo': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:92:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'bridgeFrom': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:94:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAccessMethodForMethod': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:97:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAccessMethodForField': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:100:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'resolveAccessMethodForMethod': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:107:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isUnsupported': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:112:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isVarArgs': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:117:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isReturnTypeReferenceType': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:122:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isBridge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:133:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getParameterAnnotationDescriptors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:146:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getParameterAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:157:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getParameterAnnotations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:159:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'hasParameterAnnotations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:168:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotationDescriptors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:179:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:187:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:197:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addParameterAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:200:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isVariableSynthetic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\XMethod.java:211:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\BindingSet.java:68:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\ByteCodePattern.java:30:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\ByteCodePatternMatch.java:33:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\ByteCodePatternMatch.java:37:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\IfNull.java:57:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\Invoke.java:104:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'match': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\Invoke.java:175:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'lookupFailureCallback'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\LongOrDoubleLocalVariable.java:25:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternElementMatch.java:118:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:77:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:79:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:81:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:384:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:432:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\PatternMatcher.java:437:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\Variable.java:31:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'sameAs': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\bcp\Wild.java:37:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ca\CallList.java:25:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ca\CallList.java:27:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\ClassVertex.java:35:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\ClassVertex.java:57:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\InheritanceGraphVisitor.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\InheritanceGraphVisitor.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:88:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:168:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:169:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:170:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:171:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:172:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:173:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Subtypes2': 'instanceOf' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:280:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:352:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:353:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:360:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:361:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:403:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:414:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:574:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:575:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:617:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:618:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:634:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:635:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:659:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:660:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:663:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:746:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:747:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:816:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:817:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:973:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1059:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1104:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1141:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1172:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1241:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1321:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\Subtypes2.java:1350:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\ch\SupertypeTraversalVisitor.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'visitClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\constant\ConstantFrameModelingVisitor.java:58:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\constant\ConstantFrameModelingVisitor.java:67:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefAnalysis.java:411:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefAnalysis.java:769:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefAnalysis.java:909:	UnusedFormalParameter:	Avoid unused method parameters such as 'fact'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefSet.java:131:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefSet.java:288:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'derefLocationSet'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefSet.java:306:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefSet.java:361:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\deref\UnconditionalValueDerefSet.java:376:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericObjectType.java:138:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericObjectType.java:164:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericObjectType.java:202:	FormalParameterNamingConventions:	The method parameter name 'class_name' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericObjectType.java:206:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericSignatureParser.java:45:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericSignatureParser.java:233:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'iter'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericSignatureParser.java:235:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:43:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:45:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'TypeCategory': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:57:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:71:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:92:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:147:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:167:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:177:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getString' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:279:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'GenericUtilities': 'getTypeParameters' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\generic\GenericUtilities.java:442:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\heap\FieldSet.java:31:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\heap\FieldSetAnalysis.java:114:	UnusedFormalParameter:	Avoid unused method parameters such as 'basicBlock'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\heap\LoadAnalysis.java:38:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\heap\StoreAnalysis.java:44:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\FieldPropertyDatabase.java:38:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\FieldPropertyDatabase.java:61:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\MethodPropertyDatabase.java:38:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\PropertyDatabase.java:55:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\PropertyDatabase.java:55:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\interproc\PropertyDatabase.java:197:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:54:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:55:	UnusedPrivateField:	Avoid unused private fields such as 'DEBUG'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:80:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:109:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:163:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:206:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:216:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\Analysis.java:227:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\BackwardTypeQualifierDataflowAnalysis.java:130:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FindBugsDefaultAnnotations.java:42:	AbstractClassWithoutAnyMethod:	No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'YES': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:34:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:36:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'UNCERTAIN': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:36:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:38:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NO': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:43:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'FlowValue(int)': enum constructors are implicitly private
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:74:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'meet': the method is already in a final class
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:118:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FlowValue': 'ALWAYS' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:120:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FlowValue': 'UNKNOWN' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:122:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FlowValue': 'NEVER' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\FlowValue.java:124:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'FlowValue': 'UNKNOWN' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\JSR305NullnessAnnotations.java:30:	AbstractClassWithoutAnyMethod:	No abstract method which means that the keyword is most likely used to prevent instantiation. Use a private or protected constructor instead.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:57:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:80:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:120:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:138:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'compute': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:158:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:176:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:257:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'tqa'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierApplications.java:430:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflow.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowAnalysis.java:59:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowAnalysis.java:326:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'TypeQualifierDataflowAnalysis': 'isIdentifyFunctionForTypeQualifiers' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowFactory.java:43:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowFactory.java:43:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowFactory.java:45:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowFactory.java:45:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierDataflowFactory.java:63:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:42:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:99:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:116:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:137:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:138:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:183:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:186:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:216:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:217:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierResolver.java:236:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:61:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:162:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:173:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:177:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:207:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValue.java:312:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValueSet.java:119:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValueSet.java:149:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'sourceSinkInfoSet'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValueSet.java:190:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValueSet.java:310:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\TypeQualifierValueSet.java:366:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\jsr305\ValidatorClassLoader.java:39:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClassLoader': 'getSystemClassLoader' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\DerefFinder.java:65:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\DerefFinder.java:210:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValue.java:41:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValue.java:402:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValue.java:431:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'resultValue'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysis.java:105:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'descriptor'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysis.java:203:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysis.java:676:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysis.java:717:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysis.java:730:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:38:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NO_SPLIT_DOWNGRADE_NSP': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:43:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NO_SWITCH_DEFAULT_AS_EXCEPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:43:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:50:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NCP_EXTRA_BRANCH': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:56:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'UNKNOWN_VALUES_ARE_NSP': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:62:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'USE_TYPE_QUALIFIERS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueAnalysisFeatures.java:62:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueFrame.java:42:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueFrame.java:254:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueFrameModelingVisitor.java:251:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\IsNullValueFrameModelingVisitor.java:456:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonCollector.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'foundNullDeref': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonCollector.java:79:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'foundNullDeref': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonCollector.java:91:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'foundRedundantNullCheck': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonCollector.java:115:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'foundGuaranteedNullDeref': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:252:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:286:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:340:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:423:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:448:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:542:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:726:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\NullDerefAndRedundantComparisonFinder.java:795:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\ParameterNullnessPropertyDatabase.java:46:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'prop'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\ParameterNullnessPropertyDatabase.java:49:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\RedundantBranch.java:35:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\ReturnPathType.java:106:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\TypeQualifierNullnessAnnotationDatabase.java:115:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\TypeQualifierNullnessAnnotationDatabase.java:127:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\TypeQualifierNullnessAnnotationDatabase.java:257:	IdenticalCatchBranches:	'catch' branch identical to 'MissingClassException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\TypeQualifierNullnessAnnotationDatabase.java:337:	IdenticalCatchBranches:	'catch' branch identical to 'MissingClassException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\npe\TypeQualifierNullnessAnnotationDatabase.java:433:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\InstructionActionCache.java:153:	EmptyControlStatement:	Empty finally clause
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationAnalysis.java:168:	UnusedFormalParameter:	Avoid unused method parameters such as 'end'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationAnalysis.java:229:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationAnalysis.java:365:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationAnalysis.java:413:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationFactory.java:37:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.bcel.BCELUtil'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationPolicyDatabase.java:49:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationPolicyDatabase.java:51:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationPolicyDatabaseEntry.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getEntryType': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationPolicyDatabaseEntry.java:56:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getActions': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationPolicyDatabaseEntry.java:59:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAllObligations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\obl\ObligationSet.java:167:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\BottomType.java:32:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\DoubleExtraType.java:34:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExceptionObjectType.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExceptionSet.java:62:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExceptionSetFactory.java:29:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExceptionSetFactory.java:31:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:39:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_TOP': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:39:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:45:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_LONG_EXTRA': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:45:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:51:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_DOUBLE_EXTRA': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:51:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:56:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_BOTTOM': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:64:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_NULL': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:64:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:72:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_EXCEPTION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:72:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:79:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'T_AVAIL_TYPE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\ExtendedTypes.java:79:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\FieldStoreType.java:41:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\FieldStoreType.java:96:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\LongExtraType.java:34:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\NullType.java:35:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\StandardTypeMerger.java:71:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\StandardTypeMerger.java:170:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\StandardTypeMerger.java:193:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\StandardTypeMerger.java:202:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\StandardTypeMerger.java:207:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'rOT'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TopType.java:32:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeAnalysis.java:367:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeAnalysis.java:432:	UnusedFormalParameter:	Avoid unused method parameters such as 'end'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeDataflow.java:66:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrame.java:88:	FormalParameterNamingConventions:	The method parameter name 'other_' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:37:	UnnecessaryImport:	Unused import 'org.apache.bcel.generic.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:180:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:231:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:544:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:722:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:724:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:919:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:938:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:961:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:983:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1088:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1226:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1321:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1325:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1329:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1339:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1364:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeFrameModelingVisitor.java:1472:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\type\TypeMerger.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'mergeTypes': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\AvailableLoad.java:85:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\LoadedFieldSet.java:45:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\LoadedFieldSet.java:72:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'methodGen'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\MergeTree.java:107:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\MergeTree.java:140:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumber.java:39:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysis.java:71:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysis.java:75:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysis.java:77:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysisFeatures.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'REDUNDANT_LOAD_ELIMINATION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysisFeatures.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysisFeatures.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'RLE_DEBUG': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberAnalysisFeatures.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberCache.java:110:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberDataflow.java:62:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFactory.java:42:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFactory.java:44:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:53:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:169:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:194:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:214:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:236:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:256:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:273:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:279:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:287:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:288:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:376:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:376:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:377:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:527:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:574:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:596:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:628:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrame.java:632:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:90:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:92:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:119:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'lookupFailureCallback'.
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:162:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:167:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:167:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:187:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberFrameModelingVisitor.java:187:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberSourceInfo.java:64:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ValueNumberSourceInfo': 'findLocalAnnotationFromValueNumber' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberSourceInfo.java:73:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ValueNumberSourceInfo': 'findFieldAnnotationFromValueNumber' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberSourceInfo.java:133:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ValueNumberSourceInfo': 'findXFieldFromValueNumber' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\ba\vna\ValueNumberSourceInfo.java:171:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'variableAnnotation'
spotbugs\src\main\java\edu\umd\cs\findbugs\bcel\AnnotationDetector.java:52:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\bcel\CFGDetector.java:48:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\bcel\PreorderDetector.java:51:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\bcel\generic\NullnessConversationInstruction.java:52:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\BugReporterDecorator.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\BugReporterDecorator.java:44:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\MaxRankDecorator.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\SuppressionDecorator.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\SuppressionDecorator.java:47:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\SuppressionDecorator.java:49:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\bugReporter\SuppressionDecorator.java:79:	CloseResource:	Ensure that resources like this Reader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\charsets\SourceCharset.java:37:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\charsets\UTF8.java:44:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\charsets\UTF8.java:59:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\charsets\UserTextFile.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\CheckedAnalysisException.java:32:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ClassDescriptor.java:256:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\DescriptorFactory.java:47:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\DescriptorFactory.java:188:	UnusedLocalVariable:	Avoid unused local variables such as 'bad'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\DescriptorFactory.java:269:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'DescriptorFactory': 'createClassDescriptorFromDottedClassName' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\DescriptorFactory.java:322:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldDescriptor.java:59:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldOrMethodDescriptor.java:133:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldOrMethodName.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldOrMethodName.java:34:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldOrMethodName.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSignature': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\FieldOrMethodName.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isStatic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerClassAnalysisEngine': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerMethodAnalysisEngine': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:76:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:90:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'probeClassAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:106:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getMethodAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:122:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'eagerlyPutMethodAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:133:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'purgeMethodAnalyses': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:138:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'purgeAllMethodAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:143:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'purgeClassAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:155:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerDatabaseFactory': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:173:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getDatabase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:175:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getOptionalDatabase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:188:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'eagerlyPutDatabase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:195:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassPath': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:202:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getErrorLogger': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:211:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnalysisLocals': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisCache.java:216:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getProfiler': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisEngine.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisEngine.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisEngine.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'analyze': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisEngine.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerWith': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IAnalysisEngineRegistrar.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerAnalysisEngines': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassAnalysisEngine.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassAnalysisEngine.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'canRecompute': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:26:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'MAGIC': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:26:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:28:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Class': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:28:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:30:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Fieldref': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:30:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:32:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Methodref': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:32:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_InterfaceMethodref': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:34:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:36:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_String': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:36:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:38:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Integer': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:38:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:40:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Float': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:40:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Long': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:42:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:44:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Double': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:44:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:46:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_NameAndType': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:46:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:48:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CONSTANT_Utf8': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:48:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:50:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_PUBLIC': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:50:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:52:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_PRIVATE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:52:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:54:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_PROTECTED': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:54:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:56:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_STATIC': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:56:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:58:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_FINAL': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:58:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:60:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_SUPER': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:60:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:62:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_VOLATILE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:62:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:64:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_TRANSIENT': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:64:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:66:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_INTERFACE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:66:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:68:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_ABSTRACT': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:68:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:70:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_SYNTHETIC': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:70:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:72:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_ANNOTATION': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:72:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:74:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_ENUM': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:74:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:76:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_SYNCHRONIZED': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:76:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:78:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_BRIDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:78:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:80:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_VARARGS': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:80:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:82:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_NATIVE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:82:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:84:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ACC_STRICT': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassConstants.java:84:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassFactory.java:29:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createClassPath': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassFactory.java:31:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createClassPathBuilder': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassFactory.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createFilesystemCodeBaseLocator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassFactory.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createNestedArchiveCodeBaseLocator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassFactory.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createAnalysisCache': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassObserver.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'observeClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'appCodeBaseIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:54:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'auxCodeBaseIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:65:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'lookupResource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:77:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'mapResourceNameToCodeBaseEntry': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:84:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getApplicationCodebaseEntries': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPath.java:91:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'close': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilder.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilder.java:54:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'scanNestedArchives': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilder.java:67:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'build': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilder.java:76:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAppClassList': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilderProgress.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startArchive': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IClassPathBuilderProgress.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finishArchive': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:53:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCodeBaseLocator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:63:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'lookupResource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:71:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setApplicationCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:78:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isApplicationCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:87:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setHowDiscovered': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:95:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getHowDiscovered': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:103:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'containsSourceFiles': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:111:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getPathName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:120:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLastModifiedTime': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:131:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLastModifiedTime': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBase.java:137:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'close': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:36:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getResourceName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:44:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumBytes': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:53:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openResource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:60:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:75:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseEntry.java:83:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'overrideResourceName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseIterator.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'hasNext': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseIterator.java:49:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'next': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseLocator.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openCodeBase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseLocator.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createRelativeCodeBaseLocator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ICodeBaseLocator.java:57:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'toString': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IDatabaseFactory.java:28:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createDatabase': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IDatabaseFactory.java:30:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'registerWith': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IErrorLogger.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportMissingClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IErrorLogger.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportMissingClass': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IErrorLogger.java:51:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'logError': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IErrorLogger.java:61:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'logError': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IErrorLogger.java:69:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'reportSkippedAnalysis': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IMethodAnalysisEngine.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\IScannableCodeBase.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'iterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\MethodDescriptor.java:68:	OverrideBothEqualsAndHashcode:	Ensure you override both equals() and hashCode()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\RecomputableClassAnalysisEngine.java:25:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ReflectionDatabaseFactory.java:93:	IdenticalCatchBranches:	'catch' branch identical to 'InvocationTargetException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ReflectionDatabaseFactory.java:116:	IdenticalCatchBranches:	'catch' branch identical to 'InstantiationException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\ReflectionDatabaseFactory.java:118:	IdenticalCatchBranches:	'catch' branch identical to 'InstantiationException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:34:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotationDescriptors': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getClassDescriptor': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:39:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotation': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:41:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getAnnotations': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getElementType': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getContainingScope': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotatedObject.java:47:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isSynthetic': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\AnnotationValue.java:155:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassInfo.java:58:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassInfo.java:119:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassInfo.java:173:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassInfo.java:441:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassNameAndSuperclassInfo.java:52:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassNameAndSuperclassInfo.java:65:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassNameAndSuperclassInfo.java:126:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassNameAndSuperclassInfo.java:134:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\ClassNameAndSuperclassInfo.java:146:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'referencedClassDescriptorList'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\FieldInfo.java:52:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\FieldInfo.java:59:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\FieldInfo.java:274:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:75:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:243:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:244:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:245:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:246:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:247:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:248:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:259:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:263:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:267:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:271:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:275:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:279:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:358:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:573:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\analysis\MethodInfo.java:590:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\AbstractMethodVisitor.java:39:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassDataAnalysisEngine.java:71:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:95:	LocalVariableNamingConventions:	The local variable name 'major_version' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:96:	LocalVariableNamingConventions:	The local variable name 'minor_version' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:97:	LocalVariableNamingConventions:	The local variable name 'constant_pool_count' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:110:	LocalVariableNamingConventions:	The local variable name 'access_flags' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:112:	LocalVariableNamingConventions:	The local variable name 'this_class' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:115:	LocalVariableNamingConventions:	The local variable name 'super_class' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:118:	LocalVariableNamingConventions:	The local variable name 'interfaces_count' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:305:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'stringValue'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParser.java:370:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'create': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserInterface.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'parse': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserInterface.java:56:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'parse': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:90:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:152:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:158:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:170:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:201:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:440:	LocalVariableNamingConventions:	The local variable name 'OK' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:538:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'expectedClassDescriptor'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:550:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:658:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingASM.java:670:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\ClassParserUsingBCEL.java:110:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\EngineRegistrar.java:42:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\EngineRegistrar.java:42:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\SelfMethodCalls.java:41:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\SelfMethodCalls.java:82:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'classReader'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\asm\ClassReaderAnalysisEngine.java:48:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'classReader'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\asm\EngineRegistrar.java:41:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\asm\EngineRegistrar.java:41:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\asm\FindBugsASM.java:29:	UnusedPrivateField:	Avoid unused private fields such as 'USE_EXPERIMENTAL'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\AnalysisFactory.java:45:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\AnalysisFactory.java:84:	UnusedPrivateField:	Avoid unused private fields such as 'NULL_ANALYSIS_RESULT'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:110:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'CFGFactory': 'DEBUG_CFG' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:121:	LocalVariableNamingConventions:	The local variable name 'ASSUME_ASSERTIONS_ENABLED' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:123:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:146:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:155:	LocalVariableNamingConventions:	The final local variable name 'PRUNE_INFEASIBLE_EXCEPTION_EDGES' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\CFGFactory.java:178:	LocalVariableNamingConventions:	The final local variable name 'PRUNE_UNCONDITIONAL_EXCEPTION_THROWER_EDGES' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ClassContextClassAnalysisEngine.java:50:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'classContext'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\FinallyDuplicatesInfoFactory.java:149:	SingularField:	Perhaps 'firstInstruction' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\JavaClassAnalysisEngine.java:45:	UnusedPrivateField:	Avoid unused private fields such as 'JVM_VERSION'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\LoadedFieldSetFactory.java:112:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ParameterSignatureListFactory.java:53:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueNumberDataflowFactory.java:78:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:22:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:77:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:323:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:324:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:341:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:344:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:455:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:455:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:455:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:456:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:456:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:456:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:457:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:457:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:457:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:458:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:458:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:458:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:459:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:459:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:459:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:460:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:460:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:460:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:467:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:467:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:467:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:479:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:748:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\engine\bcel\ValueRangeAnalysisFactory.java:784:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\AnalysisCache.java:277:	IdenticalCatchBranches:	'catch' branch identical to 'CheckedAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\AnalysisCache.java:327:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\AnalysisCache.java:359:	UnusedFormalParameter:	Avoid unused method parameters such as 'classContext'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\AnalysisCache.java:415:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\AnalysisCache.java:427:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassFactory.java:42:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassFactory.java:86:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassFactory.java:150:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'analysisCache'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:124:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:135:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:167:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:169:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:173:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:342:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:346:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:382:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:387:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:421:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:429:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:433:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:434:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:519:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:543:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:547:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'isArchive'
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:574:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:642:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:678:	UnusedFormalParameter:	Avoid unused method parameters such as 'classPath'.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:678:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:723:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:725:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:740:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:756:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:765:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:770:	LooseCoupling:	Avoid using implementation types like 'Attributes'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ClassPathBuilder.java:804:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\DirectoryCodeBase.java:38:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\DirectoryCodeBase.java:190:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\EmptyCodeBase.java:59:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\JrtfsCodeBase.java:83:	CloseResource:	Ensure that resources like this URLClassLoader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\JrtfsCodeBase.java:93:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\JrtfsCodeBase.java:119:	UnnecessarySemicolon:	Unnecessary semicolon
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\JrtfsCodeBase.java:179:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\JrtfsCodeBase.java:310:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\NestedZipFileCodeBase.java:64:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\NestedZipFileCodeBase.java:65:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\SingleFileCodeBase.java:262:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\SingleFileCodeBase.java:279:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipCodeBaseFactory.java:33:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:62:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:64:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:67:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:70:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:73:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:75:	AvoidInstanceofChecksInCatchClause:	An instanceof check is being performed on the caught exception.  Create a separate catch clause for this exception type.
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:84:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:84:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e3' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:87:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipFileCodeBase.java:167:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipInputStreamCodeBase.java:49:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\classfile\impl\ZipInputStreamCodeBase.java:236:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:183:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:184:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:205:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:206:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:218:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:273:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\config\CommandLine.java:277:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:47:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:67:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:68:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:69:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:70:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:492:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:531:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ProjectFilterSettings': 'EXPERIMENTAL_PRIORITY' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:534:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ProjectFilterSettings': 'LOW_PRIORITY' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:537:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ProjectFilterSettings': 'MEDIUM_PRIORITY' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:540:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ProjectFilterSettings': 'HIGH_PRIORITY' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\config\ProjectFilterSettings.java:543:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ProjectFilterSettings': 'DEFAULT_PRIORITY' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\config\UserPreferences.java:62:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\config\UserPreferences.java:113:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\config\UserPreferences.java:163:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\config\UserPreferences.java:182:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\config\UserPreferences.java:236:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\cwe\Weakness.java:13:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\cwe\WeaknessCatalog.java:28:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\cwe\WeaknessCatalog.java:57:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\AbstractAssertDetector.java:57:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\AppendingToAnObjectOutputStream.java:22:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\AppendingToAnObjectOutputStream.java:84:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\AtomicityProblem.java:22:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadResultSetAccess.java:23:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadResultSetAccess.java:92:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadResultSetAccess.java:92:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadSyntaxForRegularExpression.java:65:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadUseOfReturnValue.java:67:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadlyOverriddenAdapter.java:62:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadlyOverriddenAdapter.java:63:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BadlyOverriddenAdapter.java:63:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildCheckReturnAnnotationDatabase.java:59:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildCheckReturnAnnotationDatabase.java:59:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildInterproceduralCallGraph.java:57:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildNonNullAnnotationDatabase.java:120:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildNonnullReturnDatabase.java:127:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildStringPassthruGraph.java:201:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildStringPassthruGraph.java:220:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\BuildUnconditionalParamDerefDatabase.java:163:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CallToUnconditionalThrower.java:179:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CallToUnsupportedMethod.java:80:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CallToUnsupportedMethod.java:118:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CalledMethods.java:41:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CalledMethods.java:43:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CalledMethods.java:47:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CalledMethods.java:47:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CalledMethods.java:54:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckAnalysisContextContainedAnnotation.java:105:	DefaultLabelNotLastInSwitchStmt:	The default label should be the last label in a switch statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckCalls.java:75:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckCalls.java:84:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckCalls.java:101:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckCalls.java:132:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckExpectedWarnings.java:398:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckImmutableAnnotation.java:59:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckRelaxingNullnessAnnotation.java:22:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.NullnessAnnotation.CHECK_FOR_NULL'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckRelaxingNullnessAnnotation.java:23:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.NullnessAnnotation.NONNULL'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckRelaxingNullnessAnnotation.java:24:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.NullnessAnnotation.NULLABLE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckRelaxingNullnessAnnotation.java:188:	UnnecessaryModifier:	Unnecessary modifier 'final' on method 'checkMethod': private methods cannot be overridden
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckRelaxingNullnessAnnotation.java:282:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:127:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:150:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:165:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:466:	UnusedFormalParameter:	Avoid unused method parameters such as 'cfg'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:471:	UnusedFormalParameter:	Avoid unused method parameters such as 'cfg'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:566:	UnusedFormalParameter:	Avoid unused method parameters such as 'location'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CheckTypeQualifiers.java:601:	UnusedFormalParameter:	Avoid unused method parameters such as 'vn'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CloneIdiom.java:49:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.lang': 'Cloneable' is already in scope because it is declared in java.lang
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CloneIdiom.java:51:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CloneIdiom.java:114:	LocalVariableNamingConventions:	The local variable name 'interface_names' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ComparatorIdiom.java:85:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ConfusedInheritance.java:59:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ConfusionBetweenInheritedAndOuterMethod.java:143:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ConfusionBetweenInheritedAndOuterMethod.java:143:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ConstructorThrow.java:334:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CovariantArrayAssignment.java:85:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CovariantArrayAssignment.java:108:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CovariantArrayAssignment.java:119:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CovariantArrayAssignment.java:159:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CovariantArrayAssignment.java:184:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\CrossSiteScripting.java:226:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DeadLocalStoreProperty.java:11:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DefaultEncodingDetector.java:53:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontAssertInstanceofInTests.java:51:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontCatchIllegalMonitorStateException.java:91:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontCatchNullPointerException.java:29:	ControlStatementBraces:	This statement should have braces
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontCatchNullPointerException.java:35:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontIgnoreResultOfPutIfAbsent.java:125:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontIgnoreResultOfPutIfAbsent.java:134:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontReusePublicIdentifiers.java:21:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontReusePublicIdentifiers.java:25:	UnnecessaryImport:	Unused import 'org.apache.bcel.classfile.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontReusePublicIdentifiers.java:27:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.detect.PublicIdentifiers.PUBLIC_IDENTIFIERS'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontUseFloatsAsLoopCounters.java:105:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DontUseFloatsAsLoopCounters.java:105:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DoomedCodeWarningProperty.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DroppedException.java:85:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DroppedException.java:342:	FormalParameterNamingConventions:	The method parameter name 'PC' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DroppedException.java:421:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DroppedException.java:495:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DroppedException.java:532:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethodInvocations.java:77:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethodInvocations.java:190:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:80:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:87:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:96:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:96:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:98:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:104:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:117:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:118:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:118:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:296:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:296:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:333:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:334:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:334:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:337:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:337:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:353:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:353:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:354:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:635:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:752:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:752:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:756:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:757:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:779:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:988:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1027:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1042:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1081:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1087:	UnusedLocalVariable:	Avoid unused local variables such as 'jump1'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1087:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1087:	UnusedLocalVariable:	Avoid unused local variables such as 'jump2'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1109:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1422:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1441:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1481:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DumbMethods.java:1552:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:112:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:199:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:237:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:245:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:249:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:285:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:388:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\DuplicateBranches.java:418:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\EmptyZipFileEntry.java:49:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FieldItemSummary.java:47:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FinalizerNullsFields.java:64:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindArgumentAssertions.java:65:	ControlStatementBraces:	This statement should have braces
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBadCast2.java:122:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBadCast2.java:661:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBadEndOfStreamCheck.java:73:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBadEndOfStreamCheck.java:82:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBadEndOfStreamCheck.java:96:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindBugsSummaryStats.java:134:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindCircularDependencies.java:38:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindCircularDependencies.java:87:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindCircularDependencies.java:127:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindCircularDependencies.java:152:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindCircularDependencies.java:177:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindComparatorProblems.java:69:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindComparatorProblems.java:69:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindComparatorProblems.java:69:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindComparatorProblems.java:96:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDeadLocalStores.java:177:	UnusedFormalParameter:	Avoid unused method parameters such as 'classContext'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDeadLocalStores.java:177:	UnusedFormalParameter:	Avoid unused method parameters such as 'method'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDeadLocalStores.java:201:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDeadLocalStores.java:765:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDoubleCheck.java:43:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDoubleCheck.java:120:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDoubleCheck.java:121:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindDoubleCheck.java:187:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindFinalizeInvocations.java:54:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindFloatEquality.java:194:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindHEmismatch.java:112:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindHEmismatch.java:271:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:193:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:291:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:375:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:414:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:474:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:547:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:549:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:550:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:771:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInconsistentSync2.java:826:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindInstanceLockOnSharedStaticData.java:62:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindJSR166LockMonitorenter.java:79:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindJSR166LockMonitorenter.java:79:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindJSR166LockMonitorenter.java:249:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindMaskedFields.java:62:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindMismatchedWaitOrNotify.java:64:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindMismatchedWaitOrNotify.java:64:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindMismatchedWaitOrNotify.java:97:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindMismatchedWaitOrNotify.java:177:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:149:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'SideEffectStatus': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:231:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'MethodSideEffectStatus': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:290:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:304:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:319:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:355:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:363:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:364:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:364:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:375:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:435:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:485:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:534:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:657:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:698:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:719:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:719:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:723:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:723:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:723:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:723:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:725:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:725:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:740:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:740:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:740:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:743:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:749:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:759:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:761:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:764:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:772:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:775:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:775:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:780:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:780:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:780:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:783:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:783:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:790:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:791:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:812:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:816:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:828:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:847:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:870:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:931:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:931:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:956:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNoSideEffectMethods.java:970:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableStoreIntoSession.java:59:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableStoreIntoSession.java:145:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableStoreIntoSession.java:152:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableValuePassedToWriteObject.java:55:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableValuePassedToWriteObject.java:152:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonSerializableValuePassedToWriteObject.java:159:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonShortCircuit.java:57:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonShortCircuit.java:59:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonShortCircuit.java:61:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNonShortCircuit.java:235:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:197:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:210:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:511:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:580:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:806:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:849:	UnusedFormalParameter:	Avoid unused method parameters such as 'typeDataflow'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:885:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:920:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1058:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1265:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1267:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1267:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1324:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1326:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1326:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1515:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1630:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1767:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDeref.java:1866:	UnusedFormalParameter:	Avoid unused method parameters such as 'pc'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindNullDerefsInvolvingNonShortCircuitEvaluation.java:168:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindOpenStream.java:94:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindOpenStream.java:281:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindOpenStream.java:281:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPotentialSecurityCheckBasedOnUntrustedSource.java:121:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPotentialSecurityCheckBasedOnUntrustedSource.java:244:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPotentialSecurityCheckBasedOnUntrustedSource.java:268:	UnusedFormalParameter:	Avoid unused method parameters such as 'object'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPotentialSecurityCheckBasedOnUntrustedSource.java:303:	UnusedFormalParameter:	Avoid unused method parameters such as 'callerClass'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPotentialSecurityCheckBasedOnUntrustedSource.java:303:	UnusedFormalParameter:	Avoid unused method parameters such as 'calledClass'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:293:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:361:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:361:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:377:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:393:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindPuzzlers.java:698:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:135:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:321:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:697:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:728:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'decorate': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:746:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:747:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:831:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:831:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:876:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:883:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:1096:	LocalVariableNamingConventions:	The local variable name 'lhsType_' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:1097:	LocalVariableNamingConventions:	The local variable name 'rhsType_' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:1260:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'invokedMethod'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRefComparison.java:1276:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindReturnRef.java:102:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindReturnRef.java:106:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRoughConstants.java:144:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRoughConstants.java:145:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRoughConstants.java:145:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindRunInvocations.java:73:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison.java:261:	UnusedFormalParameter:	Avoid unused method parameters such as 'opCode'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:3:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.DCMPG'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:4:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.DCMPL'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:5:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.FCMPG'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:6:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.FCMPL'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:7:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IAND'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:8:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ACMPEQ'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:9:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ACMPNE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:10:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPEQ'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:11:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPGE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:12:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPGT'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:13:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPLE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:14:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPLT'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:15:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IF_ICMPNE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:16:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.INVOKEINTERFACE'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:17:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.INVOKEVIRTUAL'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:18:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IOR'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:19:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.ISUB'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:20:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.IXOR'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:21:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.LAND'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:22:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.LCMP'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:23:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.LOR'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:24:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.LSUB'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:25:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.LXOR'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:26:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.POP'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:83:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSelfComparison2.java:238:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSleepWithLockHeld.java:77:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSleepWithLockHeld.java:137:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSqlInjection.java:119:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSqlInjection.java:243:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSqlInjection.java:247:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindSqlInjection.java:657:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindTwoLockWait.java:63:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindTwoLockWait.java:63:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindTwoLockWait.java:89:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindTwoLockWait.java:168:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:58:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:58:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:60:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:165:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:185:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUncalledPrivateMethods.java:230:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:270:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:551:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:675:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:859:	UnusedPrivateMethod:	Avoid unused private methods such as 'compareTypesOld(Type, Type)'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:898:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnrelatedTypesInGenericContainer.java:911:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnreleasedLock.java:97:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'isNullDataflow'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsatisfiedObligation.java:167:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsatisfiedObligation.java:208:	SingularField:	Perhaps 'analysisCache' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsatisfiedObligation.java:226:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsatisfiedObligation.java:700:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsyncGet.java:43:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUnsyncGet.java:45:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUseOfNonSerializableValue.java:99:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUseOfNonSerializableValue.java:220:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUseOfNonSerializableValue.java:227:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:22:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:255:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:322:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:355:	UnnecessaryModifier:	Unnecessary modifier 'static' on interface 'GenLocation': member interfaces are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:470:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:653:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindUselessObjects.java:701:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FindVulnerableSecurityCheckMethods.java:51:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:64:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:92:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:94:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:96:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:98:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:100:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\FunctionsThatMightBeMistakenForProcedures.java:215:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\HugeSharedStringConstants.java:50:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\HugeSharedStringConstants.java:52:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\HugeSharedStringConstants.java:54:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\HugeSharedStringConstants.java:112:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\IncompatMask.java:44:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InconsistentAnnotations.java:88:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InconsistentSyncWarningProperty.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:24:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:114:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:121:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:122:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:143:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientInitializationInsideLoop.java:154:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientMemberAccess.java:41:	SingularField:	Perhaps 'clsName' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientMemberAccess.java:99:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientToArray.java:129:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InefficientToArray.java:130:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:47:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:74:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:78:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:139:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:165:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:167:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:169:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:171:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:209:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteLoop.java:306:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InfiniteRecursiveLoop.java:113:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializationChain.java:84:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializeNonnullFieldsInConstructor.java:43:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializeNonnullFieldsInConstructor.java:45:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializeNonnullFieldsInConstructor.java:47:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializeNonnullFieldsInConstructor.java:86:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'isNonnull'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InitializeNonnullFieldsInConstructor.java:98:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InstantiateStaticClass.java:61:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\IntCast2LongAsInstant.java:90:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:90:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:93:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:99:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:110:	UnusedLocalVariable:	Avoid unused local variables such as 'foundTest'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:113:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:139:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:142:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:162:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:166:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:167:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:167:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:176:	SingularField:	Perhaps 'sawSuperCall' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:180:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:180:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:181:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:188:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:191:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:197:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:215:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:216:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\InvalidJUnitTest.java:216:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\IteratorIdioms.java:42:	SingularField:	Perhaps 'sawNoSuchElement' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\IteratorIdioms.java:44:	SingularField:	Perhaps 'sawCall' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LazyInit.java:103:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LazyInit.java:103:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LazyInit.java:271:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:71:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:120:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:243:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:245:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:245:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LoadOfKnownNullValue.java:306:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\LostLoggerDueToWeakReference.java:56:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MethodReturnCheck.java:23:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.ba.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MethodReturnCheck.java:56:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'State': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MethodReturnCheck.java:323:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Methods.java:30:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Methods.java:30:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Methods.java:39:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultipleInstantiationsOfSingletons.java:46:	UnnecessarySemicolon:	Unnecessary semicolon
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultipleInstantiationsOfSingletons.java:64:	LooseCoupling:	Avoid using implementation types like 'EnumMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultipleInstantiationsOfSingletons.java:134:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultithreadedInstanceAccess.java:76:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultithreadedInstanceAccess.java:81:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultithreadedInstanceAccess.java:86:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MultithreadedInstanceAccess.java:130:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:59:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'AllowedParameter': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:84:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:163:	SwitchStmtsShouldHaveDefault:	Switch statements should be exhaustive, add a default case (or missing enum branches)
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:250:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:322:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:352:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\MutableStaticFields.java:372:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:67:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:110:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:110:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:112:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:143:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:258:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:259:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:260:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:325:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:576:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Naming.java:580:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Noise.java:44:	AvoidMessageDigestField:	You shouldnt declare field of MessageDigest type, because unsynchronized access could cause problems
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Noise.java:78:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\Noise.java:89:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:142:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:154:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:231:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:333:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:349:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:356:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoiseNullDeref.java:451:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NonNullReturnProperty.java:28:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteAnnotationRetention.java:41:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteAnnotationRetention.java:41:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteAnnotationRetention.java:83:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteCheckReturnValueAnnotations.java:35:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteCheckReturnValueAnnotations.java:35:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteCheckReturnValueAnnotations.java:48:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteDirectlyRelevantTypeQualifiers.java:54:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteDirectlyRelevantTypeQualifiers.java:54:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteDirectlyRelevantTypeQualifiers.java:69:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteDirectlyRelevantTypeQualifiers.java:82:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteDirectlyRelevantTypeQualifiers.java:136:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteJCIPAnnotation.java:44:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteNonNullAnnotations.java:43:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteNonNullAnnotations.java:61:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteNonnullReturnValues.java:37:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteNonnullReturnValues.java:37:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteSuppressedWarnings.java:55:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteSuppressedWarnings.java:147:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NoteUnconditionalParamDerefs.java:48:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NullArgumentWarningProperty.java:31:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NullDerefProperty.java:30:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\NumberConstructor.java:93:	UnusedFormalParameter:	Avoid unused method parameters such as 'isFloatingPoint'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingEqualsNotSymmetrical.java:59:	UnusedPrivateField:	Avoid unused private fields such as 'STATIC_EQUALS_SIGNATURE'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingEqualsNotSymmetrical.java:172:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingEqualsNotSymmetrical.java:186:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingEqualsNotSymmetrical.java:190:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingEqualsNotSymmetrical.java:202:	LooseCoupling:	Avoid using implementation types like 'EnumMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\OverridingMethodsMustInvokeSuperDetector.java:46:	SingularField:	Perhaps 'sawCallToSuper' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\PublicIdentifiers.java:32:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java:56:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReadReturnShouldBeChecked.java:50:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReadReturnShouldBeChecked.java:78:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReadReturnShouldBeChecked.java:89:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReadReturnShouldBeChecked.java:155:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:133:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:144:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:173:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:182:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:182:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:182:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:182:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:183:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:186:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:186:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:186:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantConditions.java:235:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantInterfaces.java:70:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RedundantInterfaces.java:85:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RefComparisonWarningProperty.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReflectiveClasses.java:38:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ReflectiveClasses.java:39:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'java.lang': 'System' is already in scope because it is declared in java.lang
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RepeatedConditionals.java:71:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RepeatedConditionals.java:73:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RepeatedConditionals.java:164:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ResolveAllReferences.java:82:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ResolveAllReferences.java:156:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ResolveAllReferences.java:160:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ResolveAllReferences.java:162:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RuntimeExceptionCapture.java:85:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\RuntimeExceptionCapture.java:213:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:71:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:97:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:99:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:101:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:103:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:172:	UnusedLocalVariable:	Avoid unused local variables such as 'superClassname'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:209:	LocalVariableNamingConventions:	The local variable name 'interface_names' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:389:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:401:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SerializableIdiom.java:627:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StaticCalendarDetector.java:66:	UnusedPrivateField:	Avoid unused private fields such as 'DEBUG'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StaticCalendarDetector.java:229:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StreamEquivalenceClass.java:31:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StreamFactory.java:51:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createStream': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StreamFrameModelingVisitor.java:106:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StreamResourceTracker.java:68:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StreamResourceTracker.java:73:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StringConcatenation.java:273:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\StringConcatenation.java:283:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SuspiciousThreadInterrupted.java:24:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:76:	SingularField:	Perhaps 'deadStore' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:78:	SingularField:	Perhaps 'priority' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:80:	UnusedPrivateField:	Avoid unused private fields such as 'fallthroughDistance'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:235:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:323:	UnusedFormalParameter:	Avoid unused method parameters such as 'startPC'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:323:	UnusedFormalParameter:	Avoid unused method parameters such as 'endPC'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:348:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:353:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SwitchFallthrough.java:360:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SynchronizationOnSharedBuiltinConstant.java:57:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SynchronizationOnSharedBuiltinConstant.java:65:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SynchronizeOnClassLiteralNotGetClass.java:52:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\SynchronizeOnClassLiteralNotGetClass.java:62:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestASM.java:22:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.I2D'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestASM.java:23:	UnnecessaryImport:	Unused static import 'org.apache.bcel.Const.INVOKESTATIC'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestASM.java:83:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestDataflowAnalysis.java:48:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestDataflowAnalysis.java:48:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestDataflowAnalysis.java:58:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestDataflowAnalysis.java:69:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestingGround.java:34:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TestingGround2.java:47:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainFieldStoreTypes.java:77:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainLongInstantfParams.java:46:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'prop'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainLongInstantfParams.java:49:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainLongInstantfParams.java:70:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainLongInstantfParams.java:70:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainLongInstantfParams.java:94:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainNonNullAnnotations.java:41:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainUnconditionalDerefParams.java:37:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\TrainUnconditionalDerefParams.java:37:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'bugReporter'.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UncallableMethodOfAnonymousClass.java:141:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UncallableMethodOfAnonymousClass.java:163:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UncallableMethodOfAnonymousClass.java:168:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UncallableMethodOfAnonymousClass.java:169:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryEnvUsage.java:38:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryMath.java:23:	UnnecessaryImport:	Unused import 'java.util.Collections'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryMath.java:60:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryMath.java:85:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryMath.java:101:	DoubleBraceInitialization:	Double-brace initialization should be avoided
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnnecessaryMath.java:159:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:226:	LocalVariableNamingConventions:	The local variable name 'interface_names' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:880:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:888:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:897:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:902:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:933:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFields.java:1214:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UnreadFieldsData.java:90:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UselessSubclassMethod.java:59:	SingularField:	Perhaps 'invokePC' could be replaced by a local variable.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UselessSubclassMethod.java:304:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\UselessSubclassMethod.java:305:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\VarArgsProblems.java:87:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ViewCFG.java:23:	UnnecessaryImport:	Unused static import 'edu.umd.cs.findbugs.ba.EdgeTypes.*'
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ViewCFG.java:71:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\ViewCFG.java:115:	DefaultLabelNotLastInSwitchStmt:	The default label should be the last label in a switch statement
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\WrongMapIterator.java:50:	UnnecessaryModifier:	Unnecessary modifier 'static' on enum 'LoadedVariableState': nested enums are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\WrongMapIterator.java:234:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\WrongMapIterator.java:237:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\detect\XMLFactoryBypass.java:130:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\AndMatcher.java:57:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\BugMatcher.java:65:	GuardLogStatement:	Logger calls should be surrounded by log level guards.
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\CompoundMatcher.java:31:	LooseCoupling:	Avoid using implementation types like 'LinkedHashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Filter.java:59:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Filter.java:65:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Filter.java:137:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Filter.java:152:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Filter.java:210:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\LocalMatcher.java:36:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'type'.
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Matcher.java:41:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'match': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\Matcher.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\NameMatch.java:61:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\NameMatch.java:69:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\NameMatch.java:100:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} && {thenBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\SignatureUtil.java:30:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\SignatureUtil.java:37:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\filter\StringSetMatch.java:44:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:48:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:48:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:48:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:65:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:149:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:305:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractDepthFirstSearch.java:328:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractEdge.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractEdge.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:39:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:39:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:51:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:51:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:84:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:84:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:120:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:122:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractGraph.java:175:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:35:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:37:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:101:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\AbstractVertex.java:119:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:31:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'UNKNOWN_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:31:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:36:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'TREE_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:36:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:41:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'BACK_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:41:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'FORWARD_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:47:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:53:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'CROSS_EDGE': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DFSEdgeTypes.java:53:	ConstantsInInterface:	Using constants in interfaces is a bad practice.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DepthFirstSearch.java:31:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DepthFirstSearch.java:31:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\DepthFirstSearch.java:31:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumEdges': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:40:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumVertices': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:45:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'edgeIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:50:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'vertexIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:59:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addVertex': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:68:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'containsVertex': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:80:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:92:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'lookupEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:99:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumVertexLabels': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:105:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setNumVertexLabels': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:110:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumEdgeLabels': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:115:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setNumEdgeLabels': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:120:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'removeEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:126:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'removeVertex': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:135:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'outgoingEdgeIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:144:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'incomingEdgeIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:153:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumIncomingEdges': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:162:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getNumOutgoingEdges': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:172:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'successorIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Graph.java:182:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'predecessorIterator': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getSource': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getTarget': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:43:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLabel': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphEdge.java:48:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLabel': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:26:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:26:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:26:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:33:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'createGraph': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:42:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'duplicateVertex': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphToolkit.java:52:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'copyEdge': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphVertex.java:27:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphVertex.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'getLabel': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\GraphVertex.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'setLabel': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:37:	UnnecessaryConstructor:	Avoid unnecessary constructors - the compiler will generate these for you
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:37:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:64:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:88:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\MergeVertices.java:88:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\ReverseDepthFirstSearch.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\ReverseDepthFirstSearch.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\ReverseDepthFirstSearch.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTree.java:32:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTree.java:36:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeBuilder.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeBuilder.java:35:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeBuilder.java:37:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeCallback.java:25:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeCallback.java:32:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startSearchTree': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\SearchTreeCallback.java:42:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addToSearchTree': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\StronglyConnectedComponents.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\StronglyConnectedComponents.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\StronglyConnectedComponents.java:33:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\StronglyConnectedComponents.java:35:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\StronglyConnectedComponents.java:177:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Transpose.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Transpose.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Transpose.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Transpose.java:32:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\Transpose.java:34:	LooseCoupling:	Avoid using implementation types like 'IdentityHashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\VertexChooser.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\VertexChooser.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'isChosen': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\VertexCombinator.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\VertexCombinator.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'combineVertices': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\graph\VisitationTimeComparator.java:34:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\AnalysisContextContained.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\DottedClassName.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\SlashedClassName.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\SlashedClassName.java:47:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'NOT_AVAILABLE': the field is declared in an annotation type
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\SlashedClassName.java:51:	UnnecessaryModifier:	Unnecessary modifier 'static' on class 'Checker': the class is declared in an annotation type
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\SlashedClassName.java:71:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\internalAnnotations\StaticConstant.java:20:	PackageCase:	Package name contains upper case characters
spotbugs\src\main\java\edu\umd\cs\findbugs\io\IO.java:58:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\io\IO.java:181:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\io\IO.java:208:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\io\IO.java:227:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\io\IO.java:265:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\io\SlowInputStream.java:45:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFParser.java:365:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFParser.java:382:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFParser.java:386:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFParser.java:405:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFToken.java:36:	UnusedFormalParameter:	Avoid unused constructor parameters such as 'lineNum'.
spotbugs\src\main\java\edu\umd\cs\findbugs\jaif\JAIFTokenKind.java:29:	UnnecessaryModifier:	Unnecessary modifier 'private' on constructor 'JAIFTokenKind(String)': enum constructors are implicitly private
spotbugs\src\main\java\edu\umd\cs\findbugs\log\LogSync.java:22:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeToLog': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\LogSync.java:24:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'error': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Logger.java:24:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'INFO': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Logger.java:26:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'WARNING': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Logger.java:28:	UnnecessaryModifier:	Unnecessary modifiers 'public static final' on field 'ERROR': the field is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Logger.java:30:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'logMessage': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\ProfileSummary.java:72:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\ProfileSummary.java:102:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:61:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:63:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:82:	UnnecessaryModifier:	Unnecessary modifier 'static' on interface 'Filter': member interfaces are implicitly static
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:83:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'accepts': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:233:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:237:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:254:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:271:	LooseCoupling:	Avoid using implementation types like 'Stack'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:409:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\log\Profiler.java:467:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\model\ClassFeatureSet.java:337:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\model\ClassNameRewriter.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'rewriteClassName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\model\RegenerateClassFeatures.java:55:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\AnalysisPass.java:41:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\AnalysisPass.java:43:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\AnalysisPass.java:96:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\DetectorFactorySelector.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'selectFactory': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:49:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:145:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:292:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:334:	UnusedLocalVariable:	Avoid unused local variables such as 'passCount'.
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:385:	UnusedFormalParameter:	Avoid unused method parameters such as 'factoryMap'.
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:399:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:400:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:409:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\plan\ExecutionPlan.java:492:	ForLoopCanBeForeach:	This for loop can be replaced by a foreach loop
spotbugs\src\main\java\edu\umd\cs\findbugs\plugins\DuplicatePluginIdError.java:27:	DoNotExtendJavaLangError:	Exceptions should not extend java.lang.Error
spotbugs\src\main\java\edu\umd\cs\findbugs\props\GeneralWarningProperty.java:29:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\props\PriorityAdjustment.java:27:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningProperty.java:34:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'getPriorityAdjustment': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningProperty.java:42:	UnnecessaryModifier:	Unnecessary modifiers 'public abstract' on method 'getName': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertySet.java:67:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertySet.java:150:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:116:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:118:	IdenticalCatchBranches:	'catch' branch identical to 'DataflowAnalysisException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:118:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:166:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:168:	IdenticalCatchBranches:	'catch' branch identical to 'CFGBuilderException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:168:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\props\WarningPropertyUtil.java:212:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\GUIDCalculator.java:17:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\GUIDCalculator.java:47:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'ex' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\Level.java:37:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\Location.java:43:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\MessageFormat.java:53:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\Taxon.java:14:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Archive.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Archive.java:70:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'extension'
spotbugs\src\main\java\edu\umd\cs\findbugs\util\BootstrapMethodsUtil.java:41:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\BootstrapMethodsUtil.java:80:	AvoidBranchingStatementAsLastInLoop:	Avoid using a branching statement as the last in a loop.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\ClassName.java:149:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'ClassName': 'fromFieldSignature' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\util\ClassName.java:284:	AssignmentInOperand:	Avoid assignments in operands
spotbugs\src\main\java\edu\umd\cs\findbugs\util\ClassPathUtil.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\DualKeyHashMap.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\DualKeyHashMap.java:30:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\DualKeyHashMap.java:43:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\util\EditDistance.java:25:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\FractionalMultiset.java:88:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\FractionalMultiset.java:99:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\FutureValue.java:36:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\HTML.java:36:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\util\HTML.java:68:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\util\HTML.java:92:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\util\HTML.java:96:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\util\HTML.java:145:	CloseResource:	Ensure that resources like this StringReader object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:59:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:61:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:63:	IdenticalCatchBranches:	'catch' branch identical to 'ClassNotFoundException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:73:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpBasicService' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:77:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpGetCodeBaseMethod' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:79:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpGetCodeBaseMethod' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:79:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpBasicService' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:85:	IdenticalCatchBranches:	'catch' branch identical to 'RuntimeException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:93:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpShowDocumentMethod' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:96:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpShowDocumentMethod' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:96:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpBasicService' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:100:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'JavaWebStart': 'jnlpShowDocumentMethod' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\JavaWebStart.java:116:	IdenticalCatchBranches:	'catch' branch identical to 'InvocationTargetException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\LaunchBrowser.java:37:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\LaunchBrowser.java:90:	IdenticalCatchBranches:	'catch' branch identical to 'InvocationTargetException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\LaunchBrowser.java:92:	IdenticalCatchBranches:	'catch' branch identical to 'InvocationTargetException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\LaunchBrowser.java:94:	IdenticalCatchBranches:	'catch' branch identical to 'InvocationTargetException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\LaunchBrowser.java:148:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'p'
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MergeMap.java:73:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MultiMap.java:43:	IdenticalCatchBranches:	'catch' branch identical to 'InstantiationException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Multiset.java:112:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:13:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:92:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:93:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:104:	SimplifyBooleanReturns:	This if statement can be replaced by `return !{condition} || {elseBranch};`
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:193:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\util\MutableClasses.java:213:	LiteralsFirstInComparisons:	Position literals first in String comparisons
spotbugs\src\main\java\edu\umd\cs\findbugs\util\NestedAccessUtil.java:58:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\NestedAccessUtil.java:152:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'nestMemberClassNames'
spotbugs\src\main\java\edu\umd\cs\findbugs\util\NestedAccessUtil.java:156:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\NestedAccessUtil.java:160:	UnusedPrivateMethod:	Avoid unused private methods such as 'getHostDottedClassName(JavaClass)'.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\NestedAccessUtil.java:176:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'nestHostClassName'
spotbugs\src\main\java\edu\umd\cs\findbugs\util\SecurityManagerHandler.java:15:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\SecurityManagerHandler.java:33:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\StringMatcher.java:35:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'matches': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Strings.java:35:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Strings.java:105:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Strings.java:194:	AvoidUsingVolatile:	Use of modifier volatile is not recommended.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:86:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:96:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:141:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:162:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:185:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:201:	UselessQualifiedThis:	Useless qualified this usage in the same class.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:222:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:233:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TestDesktopIntegration.java:262:	AvoidCatchingThrowable:	A catch statement should never catch throwable since it includes errors.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:41:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:89:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:90:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:95:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:123:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:164:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:182:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:183:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:185:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:191:	CompareObjectsWithEquals:	Use equals() to compare object references.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TopologicalSort.java:198:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TripleKeyHashMap.java:28:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TripleKeyHashMap.java:28:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TripleKeyHashMap.java:28:	GenericsNaming:	Generics names should be a one letter long and upper case.
spotbugs\src\main\java\edu\umd\cs\findbugs\util\TypeMatcher.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'matches': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:61:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:125:	UseCollectionIsEmpty:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:229:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'Util': 'getReader' is already in scope
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:257:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:262:	UseLocaleWithCaseConversions:	When doing a String.toLowerCase()/toUpperCase() call, use a Locale
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:284:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:285:	LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:291:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:292:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:298:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:299:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:316:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\util\Util.java:335:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'digest'
spotbugs\src\main\java\edu\umd\cs\findbugs\util\WriteOnceProperties.java:7:	ClassWithOnlyPrivateConstructorsShouldBeFinal:	This class has only private constructors and may be final
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\AnnotationVisitor.java:98:	ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\AnnotationVisitor.java:116:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\AnnotationVisitor.java:120:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:76:	CloneMethodReturnTypeMustMatchClassName:	The return type of the clone() method must be the class name when implements Cloneable
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:76:	CloneMethodMustImplementCloneable:	clone() method should be implemented only if implementing Cloneable interface
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:82:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:85:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:88:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:91:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:96:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:148:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:200:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:203:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:206:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:209:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:212:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\BetterVisitor.java:384:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:69:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:203:	DefaultLabelNotLastInSwitchStmt:	The default label should be the last label in a switch statement
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:216:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:216:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:228:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:228:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:242:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:269:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:272:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:286:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:303:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:315:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:326:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:335:	UseEqualsToCompareStrings:	Use equals() to compare strings instead of '==' or '!='
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:657:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:959:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:962:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:965:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:968:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:971:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:974:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:982:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:985:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:988:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:991:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:994:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:997:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:1000:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:1005:	UnsynchronizedStaticFormatter:	Static Formatter objects should be accessed in a synchronized manner
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:1006:	UnsynchronizedStaticFormatter:	Static Formatter objects should be accessed in a synchronized manner
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\DismantleBytecode.java:1010:	UnsynchronizedStaticFormatter:	Static Formatter objects should be accessed in a synchronized manner
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\LVTHelper.java:32:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:188:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:270:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:277:	LocalVariableNamingConventions:	The local variable name 'constant_pool' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:346:	LocalVariableNamingConventions:	The local variable name 'inner_classes' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:352:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:431:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:441:	LocalVariableNamingConventions:	The local variable name 'line_number_table' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:450:	LocalVariableNamingConventions:	The local variable name 'local_variable_table' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PreorderVisitor.java:827:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:70:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:75:	LocalVariableNamingConventions:	The local variable name 'file_name' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:77:	LocalVariableNamingConventions:	The local variable name 'zip_file' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:110:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\PrintClass.java:143:	LocalVariableNamingConventions:	The local variable name 'java_class' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\Util.java:39:	UnnecessaryImport:	Unused import 'edu.umd.cs.findbugs.util.ClassName'
spotbugs\src\main\java\edu\umd\cs\findbugs\visitclass\Util.java:45:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Churn.java:43:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Churn.java:65:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Churn.java:235:	CloseResource:	'out' is reassigned, but the original instance is not closed
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:96:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:97:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:98:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:217:	UnusedLocalVariable:	Avoid unused local variables such as 'out'.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:217:	CloseResource:	Ensure that resources like this OutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:242:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CopyBuggySource.java:254:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CountByPackagePrefix.java:40:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CountClassVersions.java:49:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CountClassVersions.java:93:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\CountClassVersions.java:147:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\DefectDensity.java:33:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\FB.java:29:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\FileBugHash.java:54:	AvoidMessageDigestField:	You shouldnt declare field of MessageDigest type, because unsynchronized access could cause problems
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:69:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:76:	OneDeclarationPerLine:	Use one line for each declaration, it enhances code readability.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:120:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:194:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:315:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:315:	PreserveStackTrace:	Thrown exception does not preserve the stack trace of exception 'e1' on all code paths
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:368:	SimplifyBooleanReturns:	This if statement can be replaced by `return {condition};`
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:624:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:633:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:634:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Filter.java:738:	UnnecessaryFullyQualifiedName:	Unnecessary qualifier 'edu.umd.cs.findbugs.workflow.Filter': 'FilterCommandLine' is already in scope because it is declared in an enclosing type
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\ListBugDatabaseInfo.java:44:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\ListBugDatabaseInfo.java:79:	CloseResource:	Ensure that resources like this PrintWriter object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\ListErrors.java:31:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\MineBugHistory.java:113:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\MineBugHistory.java:335:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\MineBugHistory.java:373:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\MineBugHistory.java:477:	CloseResource:	'out' is reassigned, but the original instance is not closed
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\ObfuscateBugs.java:35:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\PrintAppVersion.java:30:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RebornIssues.java:46:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RebornIssues.java:68:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RebornIssues.java:69:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RecursiveSearchForJavaFiles.java:27:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RecursiveSearchForJavaFiles.java:38:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:196:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:236:	CloseResource:	'result' is reassigned, but the original instance is not closed
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:265:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:277:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:291:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:326:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:335:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:573:	CloseResource:	Ensure that resources like this ZipOutputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:587:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\RejarClassesForAnalysis.java:606:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SetBugDatabaseInfo.java:49:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SetBugDatabaseInfo.java:225:	EmptyControlStatement:	Empty if statement
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SourceSearcher.java:34:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SourceSearcher.java:36:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SourceSearcher.java:56:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'result'
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\SourceSearcher.java:73:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TestingGround.java:35:	UncommentedEmptyConstructor:	Document empty constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TestingGround.java:82:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TestingGround.java:83:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TreemapVisualization.java:36:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TreemapVisualization.java:38:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\TreemapVisualization.java:57:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'p'
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:47:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:104:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:123:	UnnecessaryReturn:	Unnecessary return statement
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:135:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:152:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:172:	IdenticalCatchBranches:	'catch' branch identical to 'IOException' branch
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\UnionResults.java:181:	UseStandardCharsets:	Please use StandardCharsets constants
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:169:	NonStaticInitializer:	Non-static initializers are confusing
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:173:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:174:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:242:	LooseCoupling:	Avoid using implementation types like 'HashSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:304:	EmptyControlStatement:	Empty else statement
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:339:	LooseCoupling:	Avoid using implementation types like 'TreeSet'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:399:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:593:	LooseCoupling:	Avoid using implementation types like 'TreeMap'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:593:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:602:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\workflow\Update.java:612:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\Dom4JXMLOutput.java:36:	LooseCoupling:	Avoid using implementation types like 'LinkedList'; use the interface instead
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\Dom4JXMLOutput.java:51:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\Dom4JXMLOutput.java:148:	EmptyCatchBlock:	Avoid empty catch blocks
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\Dom4JXMLOutput.java:166:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\OutputStreamXMLOutput.java:198:	UselessParentheses:	Useless parentheses.
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:38:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'beginDocument': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:46:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:56:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:65:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'startTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:75:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'addAttribute': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:83:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'stopTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:91:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openCloseTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:101:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'openCloseTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:109:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'closeTag': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:118:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeText': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:127:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeCDATA': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLOutput.java:136:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'finish': the method is declared in an interface type
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLUtil.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\main\java\edu\umd\cs\findbugs\xml\XMLWriteable.java:37:	UnnecessaryModifier:	Unnecessary modifier 'public' on method 'writeXML': the method is declared in an interface type
spotbugs\src\tools\edu\umd\cs\findbugs\tools\CheckClassfileVersion.java:34:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\tools\edu\umd\cs\findbugs\tools\CheckClassfileVersion.java:44:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\tools\edu\umd\cs\findbugs\tools\CheckClassfileVersion.java:77:	CloseResource:	Ensure that resources like this DataInputStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\ComparePerfomance.java:77:	LocalVariableNamingConventions:	The local variable name 'cpu_seconds' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\tools\edu\umd\cs\findbugs\tools\ComparePerfomance.java:79:	LocalVariableNamingConventions:	The local variable name 'gc_seconds' doesn't match '[a-z][a-zA-Z0-9]*'
spotbugs\src\tools\edu\umd\cs\findbugs\tools\ComparePerfomance.java:86:	UnusedLocalVariable:	Avoid unused local variables such as 'invocations'.
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FilterAndCombineBitfieldPropertyDatabase.java:43:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FilterPropertyDatabase.java:39:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FilterPropertyDatabase.java:48:	CloseResource:	Ensure that resources like this InputStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FilterPropertyDatabase.java:62:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FixIndentation.java:41:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FixIndentation.java:131:	CloseResource:	Ensure that resources like this BufferedReader object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\FixIndentation.java:171:	CloseResource:	Ensure that resources like this StringReader object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\GenerateUpdateXml.java:29:	UseUtilityClass:	This utility class has a non-private constructor
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PlainPrintBugDescriptions.java:71:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PlainPrintBugDescriptions.java:75:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PlainPrintBugDescriptions.java:79:	UncommentedEmptyMethodBody:	Document empty method body
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:89:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:107:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:114:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:121:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:126:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\html\PrettyPrintBugDescriptions.java:147:	CloseResource:	Ensure that resources like this PrintStream object are closed after use
spotbugs\src\tools\edu\umd\cs\findbugs\tools\junit\JUnitJarRunner.java:77:	LooseCoupling:	Avoid using implementation types like 'ArrayList'; use the interface instead
spotbugs\src\tools\edu\umd\cs\findbugs\tools\junit\JUnitJarRunner.java:90:	OptimizableToArrayCall:	This call to Collection.toArray() may be optimizable
spotbugs\src\tools\edu\umd\cs\findbugs\tools\junit\JUnitJarRunner.java:123:	UnnecessaryLocalBeforeReturn:	Consider simply returning the value vs storing it in local variable 'testCaseClass'
spotbugs\src\main\java\edu\umd\cs\findbugs\sarif\SarifBugReporter.java	-	ContextedRuntimeException: java.lang.NullPointerException: Cannot invoke "net.sourceforge.pmd.lang.java.symbols.JVariableSymbol.tryGetNode()" because the return value of "net.sourceforge.pmd.lang.java.ast.ASTVariableAccess.getReferencedSym()" is null
Exception Context:
	[1:Rule applied on node=!debug only! [CompilationUnit:1:1]package edu.umd.cs.findbugs.sarif;

import java.io.IOException;
import java.io.UncheckedIOException;
import java.net.URI;
import java.util.(truncated)]
---------------------------------
